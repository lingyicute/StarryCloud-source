{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/ThumbGenerators.js","component/Admin/Common/PolicySelector.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Common/DomainInput.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Policy/utils.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/S3Guide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Task/Aria2Helper.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","component/Admin/Setting/Captcha.js","component/Admin/Node/Node.js","component/Admin/Node/Guide/Communication.js","component/Admin/Node/Guide/Aria2RPC.js","component/Admin/Node/Guide/Metainfo.js","component/Admin/Node/Guide/Completed.js","component/Admin/Node/Guide/NodeGuide.js","component/Admin/Node/AddNode.js","component/Admin/Node/EditNode.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","Palette","Image","Category","Storage","Contactless","Group","Person","InsertDriveFile","Share","Assignment","CloudDownload","ListAlt","Dashboard","t","useTranslation","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","current","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","alt","src","is_pro","Chip","size","label","component","Launch","GitHub","Description","Forum","Telegram","style","Favorite","relationships","startUser","avatarUrl","Fragment","inline","username","Trans","ns","i18nKey","components","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","keyPrefix","loading","setLoading","siteName","siteTitle","siteDes","siteScript","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","Select","MenuItem","disabled","AlertDialog","Access","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","authn_enabled","groups","setGroups","httpAlert","setHttpAlert","checked","FormControlLabel","control","Switch","ID","toString","Name","buttonMargin","tGlobal","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","mail_activation_template","mail_reset_pwd_template","TextField","autoFocus","to","inputProps","min","step","rowsMax","SizeInput","max","suffix","unit","setUnit","val","setVal","err","setError","i","base","Math","pow","unitTransform","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","slave_node_retry","slave_ping_interval","slave_recover_interval","slave_transfer_timeout","use_temp_chunk_buffer","public_resource_maxage","handleCheckChange","field","des","input","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","tApp","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","JSON","parse","themeString","stringify","Table","TableHead","TableRow","TableCell","TableBody","scope","helperText","onBlur","length","themeCopy","resStr","deleteTheme","Delete","Alert","severity","Link","href","newTheme","secondaryHeading","typography","pxToRem","column","flexBasis","details","generators","readOnly","enableFlag","executableSetting","inputs","ThumbGenerators","generator","Accordion","AccordionSummary","expandIcon","stopPropagation","onFocus","Checkbox","newOpts","AccordionDetails","InputProps","executable","testExecutable","PolicySelector","filter","policies","setPolicies","page","page_size","order_by","conditions","multiple","renderValue","selected","pid","getSelectItemStyles","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","office_preview_service","thumb_file_suffix","thumb_max_task_count","thumb_encode_method","thumb_gc_after_gen","thumb_encode_quality","maxEditSize","wopi_enabled","wopi_endpoint","wopi_session_timeout","thumb_builtin_enabled","thumb_vips_enabled","thumb_vips_exts","thumb_ffmpeg_enabled","thumb_vips_path","thumb_ffmpeg_path","thumb_ffmpeg_exts","thumb_ffmpeg_seek","thumb_libreoffice_path","thumb_libreoffice_enabled","thumb_libreoffice_exts","thumb_proxy_enabled","thumb_proxy_policy","thumb_max_src_size","parseInt","Type","cardContainer","cover","card","flex","bg","dialogFooter","img","AddPolicy","tCommon","dividers","sm","Card","CardActionArea","CardMedia","image","CardContent","tableContainer","header","headerRight","columns","align","Policy","statics","setStatics","setPage","pageSize","setPageSize","total","setTotal","addDialog","setAddDialog","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","Boolean","TableContainer","row","hover","toLocaleString","sizeToString","delete","currentTarget","Edit","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","DomainInput","domain","setDomain","protocol","setProtocol","replace","startAdornment","magicVars","example","fileOnly","MagicVar","isFile","isSlave","m","boolFields","numberFields","boolFieldsInOptions","numberFieldsInOptions","listJsonFieldsInOptions","transformPolicyRequest","policyCopy","OptionsSerialized","split","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","viewButtonLabel","textTransform","code","fontFamily","steps","optional","COSGuide","props","activeStep","setActiveStep","Set","skipped","setSkipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","SecretKey","AccessKey","BaseURL","Server","IsPrivate","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","MaxSize","file_type","placeholder_with_size","setPolicy","policyID","setPolicyID","region","setRegion","handleOptionChange","Stepper","index","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","pattern","BucketName","RadioGroup","Radio","Collapse","in","getNumber","stepContental","prevActiveStep","prevSkipped","newSkipped","values","add","LocalGuide","chunk_size","OneDriveGuide","od_proxy","od_driver","useSharePoint","setUseSharePoint","od_redirect","tps_limit","tps_limit_burst","httpsAlert","setHttpsAlert","URL","url","placeholder","parseFloat","OSSGuide","server_side_endpoint","useLanEndpoint","setUseLanEndpoint","submitPolicy","RemoteGuide","mimetype","pre","overflow","randomStr","minlength","server","secret","UpyunGuide","token","regions","S3Guide","alertOpen","setAlertOpen","s3_path_style","Autocomplete","freeSolo","onInputChange","_","renderOption","renderInput","params","AddPolicyParent","useParams","EditPro","thumb_exts","EditPolicyPreload","setType","mode","join","transformResponse","tDashboard","PolicyList","MaxStorage","GroupForm","group","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","aria2_options","compress_size","decompress_size","source_batch","aria2_batch","setGroup","handleOptionCheckChange","groupCopy","webdav_proxy","one_time_download","aria2","archive_download","archive_task","redirected_source","advance_delete","EditGroupPreload","UserFilter","setSearch","group_id","status","setInput","keywords","setKeywords","nick","email","highlight","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","setSelected","searches","isSelected","indexOf","alignSelf","Badge","invisible","FilterList","num","indeterminate","newSelecteds","n","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","Status","success","Block","UserForm","Password","GroupID","TwoFactor","setUser","groupSelections","useMemo","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","disabledBadge","File","setFiles","deleteFile","unlink","deleteBatch","force","DeleteForever","LinkOff","UploadSessionID","Size","UserID","formatLocalTime","CreatedAt","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Aria2Helper","RouterLink","Download","downloads","setDownloads","helperOpen","setHelperOpen","Source","NodeID","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","Captcha","captcha_type","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","captcha_ComplexOfNoiseText","captcha_ComplexOfNoiseDot","captcha_IsShowHollowLine","captcha_IsShowNoiseDot","captcha_IsShowNoiseText","captcha_IsShowSlimeLine","captcha_IsShowSineLine","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","captcha_TCaptcha_CaptchaAppId","captcha_TCaptcha_AppSecretKey","captcha_TCaptcha_SecretId","captcha_TCaptcha_SecretKey","disabledCell","verticalAlign","features","Node","nodes","setNodes","isActive","setIsActive","minWidthclassNames","classNames","getStatusBadge","Box","CheckCircle","Cancel","node","feature","desired","PlayArrow","Pause","Communication","SlaveKey","handleTextChange","Aria2RPC","Aria2Enabled","Aria2OptionsSerialized","interval","rpc","onBack","Metainfo","Rank","Completed","slaveOnly","NodeGuide","MasterKey","setNode","usedSteps","nodeCopy","nextStep","AddNode","EditNode","createTheme","shape","overrides","MuiButton","MuiTab","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"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","file":"static/js/11.27c734df.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Assignment,\n    Category,\n    CloudDownload,\n    Contacts,\n    Group,\n    Home,\n    Image,\n    InsertDriveFile,\n    Language,\n    ListAlt,\n    Mail,\n    Palette,\n    Person,\n    Settings,\n    SettingsEthernet,\n    Share,\n    Storage,\n    Contactless,\n} from \"@material-ui/icons\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport UserAvatar from \"../Navbar/UserAvatar\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\",\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    title: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    sub: {\n        paddingLeft: 36,\n        color: theme.palette.text.secondary,\n    },\n    subMenu: {\n        backgroundColor: theme.palette.background.default,\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    active: {\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.main,\n        \"&:hover\": {\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\n        },\n    },\n    activeText: {\n        fontWeight: 500,\n    },\n    activeIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst items = [\n    {\n        title: \"nav.summary\",\n        icon: <Home />,\n        path: \"home\",\n    },\n    {\n        title: \"nav.settings\",\n        icon: <Settings />,\n        sub: [\n            {\n                title: \"nav.basicSetting\",\n                path: \"basic\",\n                icon: <Language />,\n            },\n            {\n                title: \"nav.publicAccess\",\n                path: \"access\",\n                icon: <Contacts />,\n            },\n            {\n                title: \"nav.email\",\n                path: \"mail\",\n                icon: <Mail />,\n            },\n            {\n                title: \"nav.transportation\",\n                path: \"upload\",\n                icon: <SettingsEthernet />,\n            },\n            {\n                title: \"nav.appearance\",\n                path: \"theme\",\n                icon: <Palette />,\n            },\n            {\n                title: \"nav.image\",\n                path: \"image\",\n                icon: <Image />,\n            },\n            {\n                title: \"nav.captcha\",\n                path: \"captcha\",\n                icon: <Category />,\n            },\n        ],\n    },\n    {\n        title: \"nav.storagePolicy\",\n        icon: <Storage />,\n        path: \"policy\",\n    },\n    {\n        title: \"nav.nodes\",\n        icon: <Contactless />,\n        path: \"node\",\n    },\n    {\n        title: \"nav.groups\",\n        icon: <Group />,\n        path: \"group\",\n    },\n    {\n        title: \"nav.users\",\n        icon: <Person />,\n        path: \"user\",\n    },\n    {\n        title: \"nav.files\",\n        icon: <InsertDriveFile />,\n        path: \"file\",\n    },\n    {\n        title: \"nav.shares\",\n        icon: <Share />,\n        path: \"share\",\n    },\n    {\n        title: \"nav.tasks\",\n        icon: <Assignment />,\n        sub: [\n            {\n                title: \"nav.remoteDownload\",\n                path: \"download\",\n                icon: <CloudDownload />,\n            },\n            {\n                title: \"nav.generalTasks\",\n                path: \"task\",\n                icon: <ListAlt />,\n            },\n        ],\n    },\n];\n\nexport default function Dashboard({ content }) {\n    const { t } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(!pathHelper.isMobile());\n    const [menuOpen, setMenuOpen] = useState(null);\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        SetSubTitle(t(\"nav.title\"));\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n    }, []);\n\n    const { path } = useRouteMatch();\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\n                        {t(\"nav.dashboard\")}\n                    </Typography>\n                    <UserAvatar />\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === \"rtl\" ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className={classes.noPadding}>\n                    {items.map((item) => {\n                        if (item.path !== undefined) {\n                            return (\n                                <ListItem\n                                    onClick={() =>\n                                        history.push(\"/admin/\" + item.path)\n                                    }\n                                    button\n                                    className={clsx({\n                                        [classes.active]: location.pathname.startsWith(\n                                            \"/admin/\" + item.path\n                                        ),\n                                    })}\n                                    key={item.title}\n                                >\n                                    <ListItemIcon\n                                        className={clsx({\n                                            [classes.activeIcon]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            ),\n                                        })}\n                                    >\n                                        {item.icon}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        className={clsx({\n                                            [classes.activeText]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            ),\n                                        })}\n                                        primary={t(item.title)}\n                                    />\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            <ExpansionPanel\n                                key={item.title}\n                                square\n                                expanded={menuOpen === item.title}\n                                onChange={(event, isExpanded) => {\n                                    setMenuOpen(isExpanded ? item.title : null);\n                                }}\n                            >\n                                <ExpansionPanelSummary\n                                    aria-controls=\"panel1d-content\"\n                                    id=\"panel1d-header\"\n                                >\n                                    <ListItem button key={item.title}>\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\n                                        <ListItemText primary={t(item.title)} />\n                                    </ListItem>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <List className={classes.subMenu}>\n                                        {item.sub.map((sub) => (\n                                            <ListItem\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/\" + sub.path\n                                                    )\n                                                }\n                                                className={clsx({\n                                                    [classes.sub]: open,\n                                                    [classes.active]: location.pathname.startsWith(\n                                                        \"/admin/\" + sub.path\n                                                    ),\n                                                })}\n                                                button\n                                                key={sub.title}\n                                            >\n                                                <ListItemIcon\n                                                    className={clsx({\n                                                        [classes.activeIcon]: location.pathname.startsWith(\n                                                            \"/admin/\" + sub.path\n                                                        ),\n                                                    })}\n                                                >\n                                                    {sub.icon}\n                                                </ListItemIcon>\n                                                <ListItemText\n                                                    primary={t(sub.title)}\n                                                />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        );\n                    })}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {content(path)}\n            </main>\n        </div>\n    );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Description,\n    Favorite,\n    FileCopy,\n    Forum,\n    GitHub,\n    Home,\n    Launch,\n    Lock,\n    People,\n    Public,\n    Telegram,\n} from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    CartesianGrid,\n    Legend,\n    Line,\n    LineChart,\n    Tooltip,\n    XAxis,\n    YAxis,\n} from \"recharts\";\nimport { ResponsiveContainer } from \"recharts/lib/component/ResponsiveContainer\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    },\n    logo: {\n        width: 70,\n    },\n    logoContainer: {\n        padding: theme.spacing(3),\n        display: \"flex\",\n    },\n    title: {\n        marginLeft: 16,\n    },\n    cloudreve: {\n        fontSize: 25,\n        color: theme.palette.text.secondary,\n    },\n    version: {\n        color: theme.palette.text.hint,\n    },\n    links: {\n        padding: theme.spacing(3),\n    },\n    iconRight: {\n        minWidth: 0,\n    },\n    userIcon: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    fileIcon: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    publicIcon: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    secretIcon: {\n        backgroundColor: red[100],\n        color: red[800],\n    },\n}));\n\nexport default function Index() {\n    const { t } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [lineData, setLineData] = useState([]);\n    const [news, setNews] = useState([]);\n    const [newsUsers, setNewsUsers] = useState({});\n    const [open, setOpen] = React.useState(false);\n    const [siteURL, setSiteURL] = React.useState(\"\");\n    const [statistics, setStatistics] = useState({\n        fileTotal: 0,\n        userTotal: 0,\n        publicShareTotal: 0,\n        secretShareTotal: 0,\n    });\n    const [version, setVersion] = useState({\n        backend: \"-\",\n    });\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const ResetSiteURL = () => {\n        setOpen(false);\n        API.patch(\"/admin/setting\", {\n            options: [\n                {\n                    key: \"siteURL\",\n                    value: window.location.origin,\n                },\n            ],\n        })\n            .then(() => {\n                setSiteURL(window.location.origin);\n                ToggleSnackbar(\"top\", \"right\", t(\"settings.saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/summary\")\n            .then((response) => {\n                const data = [];\n                response.data.date.forEach((v, k) => {\n                    data.push({\n                        name: v,\n                        file: response.data.files[k],\n                        user: response.data.users[k],\n                        share: response.data.shares[k],\n                    });\n                });\n                setLineData(data);\n                setStatistics({\n                    fileTotal: response.data.fileTotal,\n                    userTotal: response.data.userTotal,\n                    publicShareTotal: response.data.publicShareTotal,\n                    secretShareTotal: response.data.secretShareTotal,\n                });\n                setVersion(response.data.version);\n                setSiteURL(response.data.siteURL);\n                if (\n                    response.data.siteURL === \"\" ||\n                    response.data.siteURL !== window.location.origin\n                ) {\n                    setOpen(true);\n                }\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        axios\n            .get(\"/api/v3/admin/news?tag=\" + t(\"summary.newsTag\"))\n            .then((response) => {\n                setNews(response.data.data);\n                const res = {};\n                response.data.included.forEach((v) => {\n                    if (v.type === \"users\") {\n                        res[v.id] = v.attributes;\n                    }\n                });\n                setNewsUsers(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"summary.newsletterError\"),\n                    \"warning\"\n                );\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={3}>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {t(\"summary.confirmSiteURLTitle\")}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <Typography>\n                            {siteURL === \"\" &&\n                                t(\"summary.siteURLNotSet\", {\n                                    current: window.location.origin,\n                                })}\n                            {siteURL !== \"\" &&\n                                t(\"summary.siteURLNotMatch\", {\n                                    current: window.location.origin,\n                                })}\n                        </Typography>\n                        <Typography>\n                            {t(\"summary.siteURLDescription\")}\n                        </Typography>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color=\"default\">\n                        {t(\"summary.ignore\")}\n                    </Button>\n                    <Button onClick={() => ResetSiteURL()} color=\"primary\">\n                        {t(\"summary.changeIt\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        {t(\"summary.trend\")}\n                    </Typography>\n                    <ResponsiveContainer\n                        width=\"100%\"\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\n                    >\n                        <LineChart width={1200} height={300} data={lineData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                name={t(\"nav.files\")}\n                                type=\"monotone\"\n                                dataKey=\"file\"\n                                stroke=\"#3f51b5\"\n                            />\n                            <Line\n                                name={t(\"nav.users\")}\n                                type=\"monotone\"\n                                dataKey=\"user\"\n                                stroke=\"#82ca9d\"\n                            />\n                            <Line\n                                name={t(\"nav.shares\")}\n                                type=\"monotone\"\n                                dataKey=\"share\"\n                                stroke=\"#e91e63\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        {t(\"summary.summary\")}\n                    </Typography>\n                    <Divider />\n                    <List className={classes.root}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.userIcon}>\n                                    <People />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.userTotal}\n                                secondary={t(\"summary.totalUsers\")}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.fileIcon}>\n                                    <FileCopy />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.fileTotal}\n                                secondary={t(\"summary.totalFiles\")}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.publicIcon}>\n                                    <Public />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.publicShareTotal}\n                                secondary={t(\"summary.publicShares\")}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.secretIcon}>\n                                    <Lock />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.secretShareTotal}\n                                secondary={t(\"summary.privateShares\")}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper>\n                    <div className={classes.logoContainer}>\n                        <img\n                            alt=\"cloudreve\"\n                            className={classes.logo}\n                            src={\"/static/img/cloudreve.svg\"}\n                        />\n                        <div className={classes.title}>\n                            <Typography className={classes.cloudreve}>\n                                Starry Cloud\n                            </Typography>\n                            <Typography className={classes.version}>\n                                {version.backend}{\" \"}\n                                {version.is_pro === \"true\" && (\n                                    <Chip size=\"small\" label=\"Pro\" />\n                                )}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div>\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://92li.us.kg\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"summary.homepage\")} />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/lingyicute\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://92li.us.kg/\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Description />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"summary.documents\")}\n                                />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(t(\"summary.forumLink\"))\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Forum />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"summary.forum\")} />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(t(\"summary.telegramGroupLink\"))\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Telegram />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"summary.telegramGroup\")}\n                                />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://92li.us.kg\")\n                                }\n                            >\n                                <ListItemIcon style={{ color: \"#ff789d\" }}>\n                                    <Favorite />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"summary.buyPro\")} />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {news &&\n                            news.map((v) => (\n                                <>\n                                    <ListItem\n                                        button\n                                        alignItems=\"flex-start\"\n                                        onClick={() =>\n                                            window.open(\n                                                \"https://92li.us.kg/\" +\n                                                    v.id\n                                            )\n                                        }\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar\n                                                alt=\"Travis Howard\"\n                                                src={\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ] &&\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ].avatarUrl\n                                                }\n                                            />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={v.attributes.title}\n                                            secondary={\n                                                <React.Fragment>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        variant=\"body2\"\n                                                        className={\n                                                            classes.inline\n                                                        }\n                                                        color=\"textPrimary\"\n                                                    >\n                                                        {newsUsers[\n                                                            v.relationships\n                                                                .startUser.data\n                                                                .id\n                                                        ] &&\n                                                            newsUsers[\n                                                                v.relationships\n                                                                    .startUser\n                                                                    .data.id\n                                                            ].username}{\" \"}\n                                                    </Typography>\n                                                    <Trans\n                                                        ns={\"dashboard\"}\n                                                        i18nKey=\"summary.publishedAt\"\n                                                        components={[\n                                                            <TimeAgo\n                                                                key={0}\n                                                                datetime={\n                                                                    v.attributes\n                                                                        .startTime\n                                                                }\n                                                                locale={t(\n                                                                    \"timeAgoLocaleCode\",\n                                                                    {\n                                                                        ns:\n                                                                            \"common\",\n                                                                    }\n                                                                )}\n                                                            />,\n                                                        ]}\n                                                    />\n                                                </React.Fragment>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider />\n                                </>\n                            ))}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function SiteInformation() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        siteURL: \"\",\n        siteName: \"\",\n        siteTitle: \"\",\n        siteDes: \"\",\n        siteScript: \"\",\n        pwa_small_icon: \"\",\n        pwa_medium_icon: \"\",\n        pwa_large_icon: \"\",\n        pwa_display: \"\",\n        pwa_theme_color: \"\",\n        pwa_background_color: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"basicInformation\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"mainTitle\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.siteName}\n                                    onChange={handleChange(\"siteName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"mainTitleDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"subTitle\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.siteTitle}\n                                    onChange={handleChange(\"siteTitle\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"subTitleDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"siteDescription\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.siteDes}\n                                    onChange={handleChange(\"siteDes\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"siteDescriptionDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"siteURL\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.siteURL}\n                                    onChange={handleChange(\"siteURL\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"siteURLDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"customFooterHTML\")}\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    value={options.siteScript}\n                                    onChange={handleChange(\"siteScript\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"customFooterHTMLDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"pwa\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smallIcon\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_small_icon}\n                                    onChange={handleChange(\"pwa_small_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smallIconDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"mediumIcon\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_medium_icon}\n                                    onChange={handleChange(\"pwa_medium_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"mediumIconDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"largeIcon\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_large_icon}\n                                    onChange={handleChange(\"pwa_large_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"largeIconDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"displayMode\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.pwa_display}\n                                    onChange={handleChange(\"pwa_display\")}\n                                >\n                                    <MenuItem value={\"fullscreen\"}>\n                                        fullscreen\n                                    </MenuItem>\n                                    <MenuItem value={\"standalone\"}>\n                                        standalone\n                                    </MenuItem>\n                                    <MenuItem value={\"minimal-ui\"}>\n                                        minimal-ui\n                                    </MenuItem>\n                                    <MenuItem value={\"browser\"}>\n                                        browser\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"displayModeDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"themeColor\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_theme_color}\n                                    onChange={handleChange(\"pwa_theme_color\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"themeColorDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"backgroundColor\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_background_color}\n                                    onChange={handleChange(\n                                        \"pwa_background_color\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"backgroundColorDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function AlertDialog({ title, msg, open, onClose }) {\n    const { t } = useTranslation(\"common\");\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Typography>{msg}</Typography>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    {t(\"ok\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Access() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const { t: tVas } = useTranslation(\"dashboard\", { keyPrefix: \"vas\" });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        register_enabled: \"1\",\n        default_group: \"1\",\n        email_active: \"0\",\n        login_captcha: \"0\",\n        reg_captcha: \"0\",\n        forget_captcha: \"0\",\n        authn_enabled: \"0\",\n    });\n    const [siteURL, setSiteURL] = useState(\"\");\n    const [groups, setGroups] = useState([]);\n    const [httpAlert, setHttpAlert] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const handleInputChange = (name) => (event) => {\n        const value = event.target.value;\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [...Object.keys(options), \"siteURL\"],\n        })\n            .then((response) => {\n                setSiteURL(response.data.siteURL);\n                delete response.data.siteURL;\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                title={t(\"hint\")}\n                msg={t(\"webauthnNoHttps\")}\n                onClose={() => setHttpAlert(false)}\n                open={httpAlert}\n            />\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"accountManagement\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.register_enabled === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"register_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"allowNewRegistrations\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"allowNewRegistrationsDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.email_active === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"email_active\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"emailActivation\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"emailActivationDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reg_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"reg_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"captchaForSignup\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"captchaForSignupDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.login_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"login_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"captchaForLogin\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"captchaForLoginDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.forget_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"forget_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"captchaForReset\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"captchaForResetDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.authn_enabled === \"1\"\n                                            }\n                                            onChange={(e) => {\n                                                if (\n                                                    !siteURL.startsWith(\n                                                        \"https://\"\n                                                    )\n                                                ) {\n                                                    setHttpAlert(true);\n                                                    return;\n                                                }\n                                                handleChange(\"authn_enabled\")(\n                                                    e\n                                                );\n                                            }}\n                                        />\n                                    }\n                                    label={t(\"webauthn\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"webauthnDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"defaultGroup\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.default_group}\n                                    onChange={handleInputChange(\n                                        \"default_group\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map((v) => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"defaultGroupDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    buttonMargin: {\n        marginLeft: 8,\n    },\n}));\n\nexport default function Mail() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const { t: tVas } = useTranslation(\"dashboard\", { keyPrefix: \"vas\" });\n    const { t: tGlobal } = useTranslation(\"common\");\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [test, setTest] = useState(false);\n    const [tesInput, setTestInput] = useState(\"\");\n    const [options, setOptions] = useState({\n        fromName: \"\",\n        fromAdress: \"\",\n        smtpHost: \"\",\n        smtpPort: \"\",\n        replyTo: \"\",\n        smtpUser: \"\",\n        smtpPass: \"\",\n        smtpEncryption: \"\",\n        mail_keepalive: \"30\",\n        mail_activation_template: \"\",\n        mail_reset_pwd_template: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const sendTestMail = () => {\n        setLoading(true);\n        API.post(\"/admin/test/mail\", {\n            to: tesInput,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"testMailSent\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const reload = () => {\n        API.get(\"/admin/reload/email\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n                reload();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={test}\n                onClose={() => setTest(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"testSMTPSettings\")}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography>{t(\"testSMTPTooltip\")}</Typography>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label={t(\"recipient\")}\n                        value={tesInput}\n                        onChange={(e) => setTestInput(e.target.value)}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setTest(false)} color=\"default\">\n                        {tGlobal(\"cancel\")}\n                    </Button>\n                    <Button\n                        onClick={() => sendTestMail()}\n                        disabled={loading}\n                        color=\"primary\"\n                    >\n                        {t(\"send\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"smtp\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"senderName\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.fromName}\n                                    onChange={handleChange(\"fromName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"senderNameDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"senderAddress\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"email\"}\n                                    required\n                                    value={options.fromAdress}\n                                    onChange={handleChange(\"fromAdress\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"senderAddressDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpServer\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpHost}\n                                    onChange={handleChange(\"smtpHost\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpServerDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpPort\")}\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.smtpPort}\n                                    onChange={handleChange(\"smtpPort\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpPortDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpUsername\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpUser}\n                                    onChange={handleChange(\"smtpUser\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpUsernameDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpPassword\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={options.smtpPass}\n                                    onChange={handleChange(\"smtpPass\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpPasswordDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"replyToAddress\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.replyTo}\n                                    onChange={handleChange(\"replyTo\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"replyToAddressDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.smtpEncryption === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"smtpEncryption\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"enforceSSL\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"enforceSSLDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smtpTTL\")}\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.mail_keepalive}\n                                    onChange={handleChange(\"mail_keepalive\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"smtpTTLDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"emailTemplates\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"activateNewUser\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_activation_template}\n                                    onChange={handleChange(\n                                        \"mail_activation_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"activateNewUserDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"resetPassword\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_reset_pwd_template}\n                                    onChange={handleChange(\n                                        \"mail_reset_pwd_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"resetPasswordDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                    {\"   \"}\n                    <Button\n                        className={classes.buttonMargin}\n                        variant={\"outlined\"}\n                        color={\"primary\"}\n                        onClick={() => setTest(true)}\n                    >\n                        {t(\"sendTestEmail\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst unitTransform = (v) => {\n    if (!v || v.toString() === \"0\") {\n        return [0, 1024 * 1024];\n    }\n    for (let i = 4; i >= 0; i--) {\n        const base = Math.pow(1024, i);\n        if (v % base === 0) {\n            return [v / base, base];\n        }\n    }\n};\n\nexport default function SizeInput({\n    onChange,\n    min,\n    value,\n    required,\n    label,\n    max,\n    suffix,\n}) {\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [unit, setUnit] = useState(1);\n    const [val, setVal] = useState(value);\n    const [err, setError] = useState(\"\");\n\n    useEffect(() => {\n        onChange({\n            target: {\n                value: (val * unit).toString(),\n            },\n        });\n        if (val * unit > max || val * unit < min) {\n            setError(\"不符合尺寸限制\");\n        } else {\n            setError(\"\");\n        }\n    }, [val, unit, max, min]);\n\n    useEffect(() => {\n        const res = unitTransform(value);\n        setUnit(res[1]);\n        setVal(res[0]);\n    }, []);\n\n    return (\n        <FormControl error={err !== \"\"}>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                style={{ width: 200 }}\n                value={val}\n                type={\"number\"}\n                inputProps={{ step: 1 }}\n                onChange={(e) => setVal(e.target.value)}\n                required={required}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={unit}\n                            onChange={(e) => setUnit(e.target.value)}\n                        >\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024}>\n                                KB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024}>\n                                MB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024}>\n                                GB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024 * 1024}>\n                                TB{suffix && suffix}\n                            </MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {err !== \"\" && <FormHelperText>{err}</FormHelperText>}\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function UploadDownload() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        max_worker_num: \"1\",\n        max_parallel_transfer: \"1\",\n        temp_path: \"\",\n        chunk_retries: \"0\",\n        archive_timeout: \"0\",\n        download_timeout: \"0\",\n        preview_timeout: \"0\",\n        doc_preview_timeout: \"0\",\n        upload_credential_timeout: \"0\",\n        upload_session_timeout: \"0\",\n        slave_api_timeout: \"0\",\n        onedrive_monitor_timeout: \"0\",\n        share_download_session_timeout: \"0\",\n        onedrive_callback_check: \"0\",\n        reset_after_upload_failed: \"0\",\n        onedrive_source_timeout: \"0\",\n        slave_node_retry: \"0\",\n        slave_ping_interval: \"0\",\n        slave_recover_interval: \"0\",\n        slave_transfer_timeout: \"0\",\n        use_temp_chunk_buffer: \"1\",\n        public_resource_maxage: \"0\",\n    });\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"transportation\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"workerNum\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.max_worker_num}\n                                    onChange={handleChange(\"max_worker_num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"workerNumDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"transitParallelNum\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.max_parallel_transfer}\n                                    onChange={handleChange(\n                                        \"max_parallel_transfer\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"transitParallelNumDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"tempFolder\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.temp_path}\n                                    onChange={handleChange(\"temp_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"tempFolderDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"failedChunkRetry\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1,\n                                    }}\n                                    value={options.chunk_retries}\n                                    onChange={handleChange(\"chunk_retries\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"failedChunkRetryDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.use_temp_chunk_buffer ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"use_temp_chunk_buffer\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"cacheChunks\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"cacheChunksDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reset_after_upload_failed ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"reset_after_upload_failed\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"resetConnection\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"resetConnectionDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"expirationDuration\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        {[\n                            {\n                                name: \"batchDownload\",\n                                field: \"archive_timeout\",\n                            },\n                            {\n                                name: \"downloadSession\",\n                                field: \"download_timeout\",\n                            },\n                            {\n                                name: \"previewURL\",\n                                field: \"preview_timeout\",\n                            },\n                            {\n                                name: \"docPreviewURL\",\n                                field: \"doc_preview_timeout\",\n                            },\n                            {\n                                name: \"staticResourceCache\",\n                                field: \"public_resource_maxage\",\n                                des: \"staticResourceCacheDes\",\n                            },\n                            {\n                                name: \"uploadSession\",\n                                field: \"upload_session_timeout\",\n                                des: \"uploadSessionDes\",\n                            },\n                            {\n                                name: \"downloadSessionForShared\",\n                                field: \"share_download_session_timeout\",\n                                des: \"downloadSessionForSharedDes\",\n                            },\n                            {\n                                name: \"onedriveMonitorInterval\",\n                                field: \"onedrive_monitor_timeout\",\n                                des: \"onedriveMonitorIntervalDes\",\n                            },\n                            {\n                                name: \"onedriveCallbackTolerance\",\n                                field: \"onedrive_callback_check\",\n                                des: \"onedriveCallbackToleranceDes\",\n                            },\n                            {\n                                name: \"onedriveDownloadURLCache\",\n                                field: \"onedrive_source_timeout\",\n                                des: \"onedriveDownloadURLCacheDes\",\n                            },\n                        ].map((input) => (\n                            <div key={input.name} className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(input.name)}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options[input.field]}\n                                        onChange={handleChange(input.field)}\n                                        required\n                                    />\n                                    {input.des && (\n                                        <FormHelperText id=\"component-helper-text\">\n                                            {t(input.des)}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"nodesCommunication\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        {[\n                            {\n                                name: \"slaveAPIExpiration\",\n                                field: \"slave_api_timeout\",\n                                des: \"slaveAPIExpirationDes\",\n                            },\n                            {\n                                name: \"heartbeatInterval\",\n                                field: \"slave_ping_interval\",\n                                des: \"heartbeatIntervalDes\",\n                            },\n                            {\n                                name: \"heartbeatFailThreshold\",\n                                field: \"slave_node_retry\",\n                                des: \"heartbeatFailThresholdDes\",\n                            },\n                            {\n                                name: \"heartbeatRecoverModeInterval\",\n                                field: \"slave_recover_interval\",\n                                des: \"heartbeatRecoverModeIntervalDes\",\n                            },\n                            {\n                                name: \"slaveTransitExpiration\",\n                                field: \"slave_transfer_timeout\",\n                                des: \"slaveTransitExpirationDes\",\n                            },\n                        ].map((input) => (\n                            <div key={input.name} className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(input.name)}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options[input.field]}\n                                        onChange={handleChange(input.field)}\n                                        required\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(input.des)}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Add, Menu } from \"@material-ui/icons\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    picker: {\n        \"& div\": {\n            boxShadow: \"none !important\",\n        },\n        marginTop: theme.spacing(1),\n    },\n    \"@global\": {\n        \".compact-picker:parent \": {\n            boxShadow: \"none !important\",\n        },\n    },\n    statusBar: {\n        height: 24,\n        width: \"100%\",\n    },\n    fab: {\n        textAlign: \"right\",\n    },\n}));\n\nexport default function CreateTheme({ open, onClose, onSubmit }) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const { t: tGlobal } = useTranslation(\"common\");\n    const classes = useStyles();\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: {\n                main: \"#3f51b5\",\n                contrastText: \"#fff\",\n            },\n            secondary: {\n                main: \"#d81b60\",\n                contrastText: \"#fff\",\n            },\n        },\n    });\n\n    const subTheme = useCallback(() => {\n        try {\n            return createMuiTheme(theme);\n        } catch (e) {\n            return createMuiTheme({});\n        }\n    }, [theme]);\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\n            <DialogContent>\n                <Grid container>\n                    <Grid spacing={2} md={8} xs={12} container>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t(\"primaryColor\")}\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.main}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                main: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#f44336\",\n                                        \"#ff9800\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#03a9f4\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffc107\",\n                                        \"#FCC400\",\n                                        \"#8bc34a\",\n                                        \"#4caf50\",\n                                        \"#009688\",\n                                        \"#2196f3\",\n                                        \"#3f51b5\",\n                                        \"#e91e63\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#194D33\",\n                                        \"#0C797D\",\n                                        \"#0062B1\",\n                                        \"#673ab7\",\n                                        \"#9c27b0\",\n                                    ]}\n                                    color={theme.palette.primary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    main: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t(\"secondaryColor\")}\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.main}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                main: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#ff1744\",\n                                        \"#ff3d00\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#00e5ff\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffea00\",\n                                        \"#ffc400\",\n                                        \"#c6ff00\",\n                                        \"#00e676\",\n                                        \"#76ff03\",\n                                        \"#00b0ff\",\n                                        \"#2979ff\",\n                                        \"#f50057\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#1de9b6\",\n                                        \"#0C797D\",\n                                        \"#3d5afe\",\n                                        \"#651fff\",\n                                        \"#d500f9\",\n                                    ]}\n                                    color={theme.palette.secondary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    main: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t(\"primaryColorText\")}\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.contrastText}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                contrastText: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.primary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    contrastText: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t(\"secondaryColorText\")}\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.contrastText}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                contrastText: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.secondary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    contrastText: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid spacing={2} md={4} xs={12}>\n                        <ThemeProvider theme={subTheme()}>\n                            <div\n                                className={classes.statusBar}\n                                style={{\n                                    backgroundColor: subTheme().palette.primary\n                                        .dark,\n                                }}\n                            />\n                            <AppBar position=\"static\">\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        className={classes.menuButton}\n                                        color=\"inherit\"\n                                        aria-label=\"menu\"\n                                    >\n                                        <Menu />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        Color\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            <div style={{ padding: 16 }}>\n                                <TextField\n                                    fullWidth\n                                    color={\"secondary\"}\n                                    label={\"Text input\"}\n                                />\n                                <div\n                                    className={classes.fab}\n                                    style={{ paddingTop: 64 }}\n                                >\n                                    <Fab color=\"secondary\" aria-label=\"add\">\n                                        <Add />\n                                    </Fab>\n                                </div>\n                            </div>\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    {tGlobal(\"cancel\")}\n                </Button>\n                <Button onClick={() => onSubmit(theme)} color=\"primary\">\n                    {tGlobal(\"ok\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport CreateTheme from \"../Dialogs/CreateTheme\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 500,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    colorContainer: {\n        display: \"flex\",\n    },\n    colorDot: {\n        width: 20,\n        height: 20,\n        borderRadius: \"50%\",\n        marginLeft: 6,\n    },\n}));\n\nexport default function Theme() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const { t: tApp } = useTranslation();\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [theme, setTheme] = useState({});\n    const [options, setOptions] = useState({\n        themes: \"{}\",\n        defaultTheme: \"\",\n        home_view_method: \"icon\",\n        share_view_method: \"list\",\n    });\n    const [themeConfig, setThemeConfig] = useState({});\n    const [themeConfigError, setThemeConfigError] = useState({});\n    const [create, setCreate] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteTheme = (color) => {\n        if (color === options.defaultTheme) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"cannotDeleteDefaultTheme\"),\n                \"warning\"\n            );\n            return;\n        }\n        if (Object.keys(theme).length <= 1) {\n            ToggleSnackbar(\"top\", \"right\", t(\"keepAtLeastOneTheme\"), \"warning\");\n            return;\n        }\n        const themeCopy = { ...theme };\n        delete themeCopy[color];\n        const resStr = JSON.stringify(themeCopy);\n        setOptions({\n            ...options,\n            themes: resStr,\n        });\n    };\n\n    const addTheme = (newTheme) => {\n        setCreate(false);\n        if (theme[newTheme.palette.primary.main] !== undefined) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"duplicatedThemePrimaryColor\"),\n                \"warning\"\n            );\n            return;\n        }\n        const res = {\n            ...theme,\n            [newTheme.palette.primary.main]: newTheme,\n        };\n        const resStr = JSON.stringify(res);\n        setOptions({\n            ...options,\n            themes: resStr,\n        });\n    };\n\n    useEffect(() => {\n        const res = JSON.parse(options.themes);\n        const themeString = {};\n\n        Object.keys(res).forEach((k) => {\n            themeString[k] = JSON.stringify(res[k]);\n        });\n\n        setTheme(res);\n        setThemeConfig(themeString);\n    }, [options.themes]);\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"themes\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>{t(\"colors\")}</TableCell>\n                                        <TableCell>\n                                            {t(\"themeConfig\")}\n                                        </TableCell>\n                                        <TableCell>{t(\"actions\")}</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(theme).map((k) => (\n                                        <TableRow key={k}>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                <div\n                                                    className={\n                                                        classes.colorContainer\n                                                    }\n                                                >\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .primary\n                                                                    .main,\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .secondary\n                                                                    .main,\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    error={themeConfigError[k]}\n                                                    helperText={\n                                                        themeConfigError[k] &&\n                                                        t(\"wrongFormat\")\n                                                    }\n                                                    fullWidth\n                                                    multiline\n                                                    onChange={(e) => {\n                                                        setThemeConfig({\n                                                            ...themeConfig,\n                                                            [k]: e.target.value,\n                                                        });\n                                                    }}\n                                                    onBlur={(e) => {\n                                                        try {\n                                                            const res = JSON.parse(\n                                                                e.target.value\n                                                            );\n                                                            if (\n                                                                !(\n                                                                    \"palette\" in\n                                                                    res\n                                                                ) ||\n                                                                !(\n                                                                    \"primary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .primary\n                                                                ) ||\n                                                                !(\n                                                                    \"secondary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .secondary\n                                                                )\n                                                            ) {\n                                                                throw e;\n                                                            }\n                                                            setTheme({\n                                                                ...theme,\n                                                                [k]: res,\n                                                            });\n                                                        } catch (e) {\n                                                            setThemeConfigError(\n                                                                {\n                                                                    ...themeConfigError,\n                                                                    [k]: true,\n                                                                }\n                                                            );\n                                                            return;\n                                                        }\n                                                        setThemeConfigError({\n                                                            ...themeConfigError,\n                                                            [k]: false,\n                                                        });\n                                                    }}\n                                                    value={themeConfig[k]}\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <IconButton\n                                                    onClick={() =>\n                                                        deleteTheme(k)\n                                                    }\n                                                >\n                                                    <Delete />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                            <div>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    style={{ marginTop: 8 }}\n                                    onClick={() => setCreate(true)}\n                                >\n                                    {t(\"createNewTheme\")}\n                                </Button>\n                            </div>\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\n                                <Typography variant=\"body2\">\n                                    <Trans\n                                        i18nKey={\"settings.themeConfigDes\"}\n                                        ns={\"dashboard\"}\n                                        components={[\n                                            <Link\n                                                key={0}\n                                                href={t(\"themeConfigDoc\")}\n                                                target={\"_blank\"}\n                                            />,\n                                        ]}\n                                    />\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"defaultTheme\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.defaultTheme}\n                                    onChange={handleChange(\"defaultTheme\")}\n                                >\n                                    {Object.keys(theme).map((k) => (\n                                        <MenuItem key={k} value={k}>\n                                            <div\n                                                className={\n                                                    classes.colorContainer\n                                                }\n                                            >\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .primary.main,\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .secondary.main,\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                            </div>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"defaultThemeDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"appearance\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"personalFileListView\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.home_view_method}\n                                    onChange={handleChange(\"home_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>\n                                        {tApp(\"fileManager.gridViewLarge\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        {tApp(\"fileManager.gridViewSmall\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>\n                                        {tApp(\"fileManager.listView\")}\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"personalFileListViewDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"sharedFileListView\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.share_view_method}\n                                    onChange={handleChange(\"share_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>\n                                        {tApp(\"fileManager.gridViewLarge\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        {tApp(\"fileManager.gridViewSmall\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>\n                                        {tApp(\"fileManager.listView\")}\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"sharedFileListViewDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n\n            <CreateTheme\n                onSubmit={addTheme}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    column: {\n        flexBasis: \"33.33%\",\n    },\n    details: {\n        display: \"block\",\n    },\n}));\n\nconst generators = [\n    {\n        name: \"policyBuiltin\",\n        des: \"policyBuiltinDes\",\n        readOnly: true,\n    },\n    {\n        name: \"libreOffice\",\n        des: \"libreOfficeDes\",\n        enableFlag: \"thumb_libreoffice_enabled\",\n        executableSetting: \"thumb_libreoffice_path\",\n        inputs: [\n            {\n                name: \"thumb_libreoffice_exts\",\n                label: \"generatorExts\",\n                des: \"generatorExtsDes\",\n            },\n        ],\n    },\n    {\n        name: \"vips\",\n        des: \"vipsDes\",\n        enableFlag: \"thumb_vips_enabled\",\n        executableSetting: \"thumb_vips_path\",\n        inputs: [\n            {\n                name: \"thumb_vips_exts\",\n                label: \"generatorExts\",\n                des: \"generatorExtsDes\",\n            },\n        ],\n    },\n    {\n        name: \"ffmpeg\",\n        des: \"ffmpegDes\",\n        enableFlag: \"thumb_ffmpeg_enabled\",\n        executableSetting: \"thumb_ffmpeg_path\",\n        inputs: [\n            {\n                name: \"thumb_ffmpeg_exts\",\n                label: \"generatorExts\",\n                des: \"generatorExtsDes\",\n            },\n            {\n                name: \"thumb_ffmpeg_seek\",\n                label: \"ffmpegSeek\",\n                des: \"ffmpegSeekDes\",\n                required: true,\n            },\n        ],\n    },\n    {\n        name: \"cloudreveBuiltin\",\n        des: \"cloudreveBuiltinDes\",\n        enableFlag: \"thumb_builtin_enabled\",\n    },\n];\n\nexport default function ThumbGenerators({ options, setOptions }) {\n    const classes = useStyles();\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const testExecutable = (name, executable) => {\n        setLoading(true);\n        API.post(\"/admin/test/thumb\", {\n            name,\n            executable,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"executableTestSuccess\", { version: response.data }),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleEnableChange = (name) => (event) => {\n        const newOpts = {\n            ...options,\n            [name]: event.target.checked ? \"1\" : \"0\",\n        };\n        setOptions(newOpts);\n\n        if (\n            newOpts[\"thumb_libreoffice_enabled\"] === \"1\" &&\n            newOpts[\"thumb_builtin_enabled\"] === \"0\" &&\n            newOpts[\"thumb_vips_enabled\"] === \"0\"\n        ) {\n            ToggleSnackbar(\n                \"top\",\n                \"center\",\n                t(\"thumbDependencyWarning\"),\n                \"warning\"\n            );\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            {generators.map((generator) => (\n                <Accordion key={generator.name}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-label=\"Expand\"\n                        aria-controls=\"additional-actions1-content\"\n                        id=\"additional-actions1-header\"\n                    >\n                        <FormControlLabel\n                            aria-label=\"Acknowledge\"\n                            onClick={(event) => event.stopPropagation()}\n                            onFocus={(event) => event.stopPropagation()}\n                            control={\n                                <Checkbox\n                                    checked={\n                                        generator.readOnly ||\n                                        options[generator.enableFlag] === \"1\"\n                                    }\n                                    onChange={handleEnableChange(\n                                        generator.enableFlag\n                                    )}\n                                />\n                            }\n                            label={t(generator.name)}\n                            disabled={generator.readOnly}\n                        />\n                    </AccordionSummary>\n                    <AccordionDetails className={classes.details}>\n                        <Typography color=\"textSecondary\">\n                            {t(generator.des)}\n                        </Typography>\n                        {generator.executableSetting && (\n                            <FormControl margin=\"normal\" fullWidth>\n                                <TextField\n                                    label={t(\"executable\")}\n                                    variant=\"outlined\"\n                                    value={options[generator.executableSetting]}\n                                    onChange={handleChange(\n                                        generator.executableSetting\n                                    )}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Button\n                                                    disabled={loading}\n                                                    onClick={() =>\n                                                        testExecutable(\n                                                            generator.name,\n                                                            options[\n                                                                generator\n                                                                    .executableSetting\n                                                            ]\n                                                        )\n                                                    }\n                                                    color=\"primary\"\n                                                >\n                                                    {t(\"executableTest\")}\n                                                </Button>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"executableDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        )}\n                        {generator.inputs &&\n                            generator.inputs.map((input) => (\n                                <FormControl\n                                    key={input.name}\n                                    margin=\"normal\"\n                                    fullWidth\n                                >\n                                    <TextField\n                                        label={t(input.label)}\n                                        variant=\"outlined\"\n                                        value={options[input.name]}\n                                        onChange={handleChange(input.name)}\n                                        required={!!input.required}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(input.des)}\n                                    </FormHelperText>\n                                </FormControl>\n                            ))}\n                    </AccordionDetails>\n                </Accordion>\n            ))}\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getSelectItemStyles } from \"../../../utils\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { FormControl } from \"@material-ui/core\";\nimport API from \"../../../middleware/Api\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport default function PolicySelector({\n    onChange,\n    value,\n    label,\n    helperText,\n    filter,\n}) {\n    const [policies, setPolicies] = useState({});\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                let data = response.data.items;\n                if (filter) {\n                    data = data.filter(filter);\n                }\n\n                data.forEach((v) => {\n                    res[v.ID] = v.Name;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Select\n                labelId=\"demo-mutiple-chip-label\"\n                id=\"demo-mutiple-chip\"\n                multiple\n                value={value}\n                onChange={onChange}\n                input={<Input id=\"select-multiple-chip\" />}\n                renderValue={(selected) => (\n                    <div>\n                        {selected.map((value) => (\n                            <Chip\n                                style={{\n                                    margin: 2,\n                                }}\n                                key={value}\n                                size={\"small\"}\n                                label={policies[value]}\n                            />\n                        ))}\n                    </div>\n                )}\n            >\n                {Object.keys(policies).map((pid) => (\n                    <MenuItem\n                        key={pid}\n                        value={pid}\n                        style={getSelectItemStyles(pid, value, theme)}\n                    >\n                        {policies[pid]}\n                    </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText id=\"component-helper-text\">\n                {helperText}\n            </FormHelperText>\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport Link from \"@material-ui/core/Link\";\nimport ThumbGenerators from \"./ThumbGenerators\";\nimport PolicySelector from \"../Common/PolicySelector\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function ImageSetting() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        gravatar_server: \"\",\n        avatar_path: \"\",\n        avatar_size: \"\",\n        avatar_size_l: \"\",\n        avatar_size_m: \"\",\n        avatar_size_s: \"\",\n        thumb_width: \"\",\n        thumb_height: \"\",\n        office_preview_service: \"\",\n        thumb_file_suffix: \"\",\n        thumb_max_task_count: \"\",\n        thumb_encode_method: \"\",\n        thumb_gc_after_gen: \"0\",\n        thumb_encode_quality: \"\",\n        maxEditSize: \"\",\n        wopi_enabled: \"0\",\n        wopi_endpoint: \"\",\n        wopi_session_timeout: \"0\",\n        thumb_builtin_enabled: \"0\",\n        thumb_vips_enabled: \"0\",\n        thumb_vips_exts: \"\",\n        thumb_ffmpeg_enabled: \"0\",\n        thumb_vips_path: \"\",\n        thumb_ffmpeg_path: \"\",\n        thumb_ffmpeg_exts: \"\",\n        thumb_ffmpeg_seek: \"\",\n        thumb_libreoffice_path: \"\",\n        thumb_libreoffice_enabled: \"0\",\n        thumb_libreoffice_exts: \"\",\n        thumb_proxy_enabled: \"0\",\n        thumb_proxy_policy: [],\n        thumb_max_src_size: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                response.data.thumb_proxy_policy = JSON.parse(\n                    response.data.thumb_proxy_policy\n                ).map((v) => {\n                    return v.toString();\n                });\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const reload = () => {\n        API.get(\"/admin/reload/wopi\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            let value = options[k];\n            if (k === \"thumb_proxy_policy\") {\n                value = JSON.stringify(value.map((v) => parseInt(v)));\n            }\n\n            option.push({\n                key: k,\n                value,\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n                reload();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"avatar\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"gravatarServer\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.gravatar_server}\n                                    onChange={handleChange(\"gravatar_server\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"gravatarServerDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"avatarFilePath\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.avatar_path}\n                                    onChange={handleChange(\"avatar_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"avatarFilePathDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                {options.avatar_size !== \"\" && (\n                                    <SizeInput\n                                        value={options.avatar_size}\n                                        onChange={handleChange(\"avatar_size\")}\n                                        required\n                                        min={0}\n                                        max={2147483647}\n                                        label={t(\"avatarSize\")}\n                                    />\n                                )}\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"avatarSizeDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"smallAvatarSize\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_s}\n                                    onChange={handleChange(\"avatar_size_s\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"mediumAvatarSize\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_m}\n                                    onChange={handleChange(\"avatar_size_m\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"largeAvatarSize\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_l}\n                                    onChange={handleChange(\"avatar_size_l\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"filePreview\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"officePreviewService\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.office_preview_service}\n                                    onChange={handleChange(\n                                        \"office_preview_service\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"officePreviewServiceDes\")}\n                                    <br />\n                                    <code>{\"{$src}\"}</code> -{\" \"}\n                                    {t(\"officePreviewServiceSrcDes\")}\n                                    <br />\n                                    <code>{\"{$srcB64}\"}</code> -{\" \"}\n                                    {t(\"officePreviewServiceSrcB64Des\")}\n                                    <br />\n                                    <code>{\"{$name}\"}</code> -{\" \"}\n                                    {t(\"officePreviewServiceName\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                {options.maxEditSize !== \"\" && (\n                                    <SizeInput\n                                        value={options.maxEditSize}\n                                        onChange={handleChange(\"maxEditSize\")}\n                                        required\n                                        min={0}\n                                        max={2147483647}\n                                        label={t(\"textEditMaxSize\")}\n                                    />\n                                )}\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"textEditMaxSizeDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"wopiClient\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"settings.wopiClientDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            target={\"_blank\"}\n                                            href={t(\"wopiDocLink\")}\n                                        />,\n                                    ]}\n                                />\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.wopi_enabled === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"wopi_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"enableWopi\")}\n                                />\n                            </FormControl>\n                        </div>\n\n                        {options.wopi_enabled === \"1\" && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"wopiEndpoint\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={options.wopi_endpoint}\n                                            onChange={handleChange(\n                                                \"wopi_endpoint\"\n                                            )}\n                                            required\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            {t(\"wopiEndpointDes\")}\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"wopiSessionTtl\")}\n                                        </InputLabel>\n                                        <Input\n                                            inputProps={{ min: 1, step: 1 }}\n                                            type={\"number\"}\n                                            value={options.wopi_session_timeout}\n                                            onChange={handleChange(\n                                                \"wopi_session_timeout\"\n                                            )}\n                                            required\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            {t(\"wopiSessionTtlDes\")}\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"thumbnails\")}\n                    </Typography>\n                    <div className={classes.form}>\n                        <Alert severity=\"info\">\n                            <Trans\n                                ns={\"dashboard\"}\n                                i18nKey={\"settings.thumbnailDoc\"}\n                                components={[\n                                    <Link\n                                        key={0}\n                                        target={\"_blank\"}\n                                        href={t(\"thumbnailDocLink\")}\n                                    />,\n                                ]}\n                            />\n                        </Alert>\n                    </div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        {t(\"thumbnailBasic\")}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"thumbWidth\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_width}\n                                    onChange={handleChange(\"thumb_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"thumbHeight\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_height}\n                                    onChange={handleChange(\"thumb_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"thumbSuffix\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"text\"}\n                                    value={options.thumb_file_suffix}\n                                    onChange={handleChange(\"thumb_file_suffix\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"thumbConcurrent\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: -1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_max_task_count}\n                                    onChange={handleChange(\n                                        \"thumb_max_task_count\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"thumbConcurrentDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"thumbFormat\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"test\"}\n                                    value={options.thumb_encode_method}\n                                    onChange={handleChange(\n                                        \"thumb_encode_method\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"thumbFormatDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"thumbQuality\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                        max: 100,\n                                    }}\n                                    value={options.thumb_encode_quality}\n                                    onChange={handleChange(\n                                        \"thumb_encode_quality\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"thumbQualityDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                {options.thumb_max_src_size !== \"\" && (\n                                    <SizeInput\n                                        value={options.thumb_max_src_size}\n                                        onChange={handleChange(\n                                            \"thumb_max_src_size\"\n                                        )}\n                                        required\n                                        min={0}\n                                        max={2147483647}\n                                        label={t(\"thumbMaxSize\")}\n                                    />\n                                )}\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"thumbMaxSizeDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.thumb_gc_after_gen ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"thumb_gc_after_gen\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"thumbGC\")}\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        {t(\"generators\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <ThumbGenerators\n                                options={options}\n                                setOptions={setOptions}\n                            />\n                        </div>\n                    </div>\n\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        {t(\"generatorProxy\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                {t(\"generatorProxyWarning\")}\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.thumb_proxy_enabled ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"thumb_proxy_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"enableThumbProxy\")}\n                                />\n                            </FormControl>\n                        </div>\n                        {options.thumb_proxy_enabled === \"1\" && (\n                            <>\n                                <div className={classes.form}>\n                                    <PolicySelector\n                                        value={options.thumb_proxy_policy}\n                                        onChange={handleChange(\n                                            \"thumb_proxy_policy\"\n                                        )}\n                                        filter={(t) => t.Type !== \"local\"}\n                                        label={t(\"proxyPolicyList\")}\n                                        helperText={t(\"proxyPolicyListDes\")}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        display: \"flex\",\n    },\n    cover: {\n        width: 100,\n        height: 60,\n    },\n    card: {},\n    content: {\n        flex: \"1 0 auto\",\n    },\n    bg: {\n        backgroundColor: theme.palette.background.default,\n        padding: \"24px 24px\",\n    },\n    dialogFooter: {\n        justifyContent: \"space-between\",\n    },\n}));\n\nconst policies = [\n    {\n        name: \"local\",\n        img: \"local.png\",\n        path: \"/admin/policy/add/local\",\n    },\n    {\n        name: \"remote\",\n        img: \"remote.png\",\n        path: \"/admin/policy/add/remote\",\n    },\n    {\n        name: \"qiniu\",\n        img: \"qiniu.png\",\n        path: \"/admin/policy/add/qiniu\",\n    },\n    {\n        name: \"oss\",\n        img: \"oss.png\",\n        path: \"/admin/policy/add/oss\",\n    },\n    {\n        name: \"upyun\",\n        img: \"upyun.png\",\n        path: \"/admin/policy/add/upyun\",\n    },\n    {\n        name: \"cos\",\n        img: \"cos.png\",\n        path: \"/admin/policy/add/cos\",\n    },\n    {\n        name: \"onedrive\",\n        img: \"onedrive.png\",\n        path: \"/admin/policy/add/onedrive\",\n    },\n    {\n        name: \"s3\",\n        img: \"s3.png\",\n        path: \"/admin/policy/add/s3\",\n    },\n];\n\nexport default function AddPolicy({ open, onClose }) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const { t: tCommon } = useTranslation(\"common\");\n    const classes = useStyles();\n\n    const location = useHistory();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"sm\"}\n            fullWidth\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {t(\"selectAStorageProvider\")}\n            </DialogTitle>\n            <DialogContent dividers className={classes.bg}>\n                <Grid container spacing={2}>\n                    {policies.map((v) => (\n                        <Grid item sm={12} md={6} key={v.path}>\n                            <Card className={classes.card}>\n                                <CardActionArea\n                                    onClick={() => {\n                                        location.push(v.path);\n                                        onClose();\n                                    }}\n                                    className={classes.cardContainer}\n                                >\n                                    <CardMedia\n                                        className={classes.cover}\n                                        image={\"/static/img/\" + v.img}\n                                    />\n                                    <CardContent className={classes.content}>\n                                        <Typography\n                                            variant=\"subtitle1\"\n                                            color=\"textSecondary\"\n                                        >\n                                            {t(v.name)}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </DialogContent>\n            <DialogActions className={classes.dialogFooter}>\n                <Button\n                    onClick={() =>\n                        window.open(t(\"comparesStoragePoliciesLink\"))\n                    }\n                    color=\"primary\"\n                >\n                    {t(\"comparesStoragePolicies\")}\n                </Button>\n                <Button onClick={onClose} color=\"primary\">\n                    {tCommon(\"cancel\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n}));\n\nconst columns = [\n    { id: \"#\", label: \"sharp\", minWidth: 50 },\n    { id: \"name\", label: \"name\", minWidth: 170 },\n    { id: \"type\", label: \"type\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"childFiles\",\n        minWidth: 50,\n        align: \"right\",\n    },\n    {\n        id: \"size\",\n        label: \"totalSize\",\n        minWidth: 100,\n        align: \"right\",\n    },\n    {\n        id: \"action\",\n        label: \"actions\",\n        minWidth: 170,\n        align: \"right\",\n    },\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Policy() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    // const [loading, setLoading] = useState(false);\n    // const [tab, setTab] = useState(0);\n    const [policies, setPolicies] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [addDialog, setAddDialog] = useState(false);\n    const [filter, setFilter] = useState(\"all\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editID, setEditID] = React.useState(0);\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", t(\"authSuccess\"), \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    const loadList = () => {\n        API.post(\"/admin/policy/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n            conditions: filter === \"all\" ? {} : { type: filter },\n        })\n            .then((response) => {\n                setPolicies(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, filter]);\n\n    const deletePolicy = (id) => {\n        API.delete(\"/admin/policy/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"policyDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => setAddDialog(true)}\n                    variant={\"contained\"}\n                >\n                    {t(\"newStoragePolicy\")}\n                </Button>\n                <div className={classes.headerRight}>\n                    <Select\n                        style={{\n                            marginRight: 8,\n                        }}\n                        value={filter}\n                        onChange={(e) => setFilter(e.target.value)}\n                    >\n                        {[\n                            \"all\",\n                            \"local\",\n                            \"remote\",\n                            \"qiniu\",\n                            \"upyun\",\n                            \"oss\",\n                            \"cos\",\n                            \"onedrive\",\n                            \"s3\",\n                        ].map((v) => (\n                            <MenuItem key={v} value={v}>\n                                {t(v)}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        {t(\"refresh\")}\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {t(column.label)}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {policies.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>{t(row.Type)}</TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID][0].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(statics[row.ID][1])}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={t(\"delete\")}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={t(\"edit\")}>\n                                            <IconButton\n                                                onClick={(e) => {\n                                                    setEditID(row.ID);\n                                                    handleClick(e);\n                                                }}\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n            <Menu\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                keepMounted\n            >\n                <MenuItem\n                    onClick={(e) => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/pro/\" + editID);\n                    }}\n                >\n                    {t(\"editInProMode\")}\n                </MenuItem>\n                <MenuItem\n                    onClick={(e) => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/guide/\" + editID);\n                    }}\n                >\n                    {t(\"editInWizardMode\")}\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nexport default function DomainInput({ onChange, value, required, label }) {\n    const [domain, setDomain] = useState(\"\");\n    const [protocol, setProtocol] = useState(\"https://\");\n    const [error, setError] = useState();\n\n    useState(() => {\n        value = value ? value : \"\";\n        if (value.startsWith(\"https://\")) {\n            setDomain(value.replace(\"https://\", \"\"));\n            setProtocol(\"https://\");\n        } else {\n            if (value !== \"\") {\n                setDomain(value.replace(\"http://\", \"\"));\n                setProtocol(\"http://\");\n            }\n        }\n    }, [value]);\n\n    useEffect(() => {\n        if (protocol === \"http://\" && window.location.protocol === \"https:\") {\n            setError(\n                \"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\"\n            );\n        } else {\n            setError(\"\");\n        }\n    }, [protocol]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                error={error !== \"\"}\n                value={domain}\n                onChange={(e) => {\n                    setDomain(e.target.value);\n                    onChange({\n                        target: {\n                            value: protocol + e.target.value,\n                        },\n                    });\n                }}\n                required={required}\n                startAdornment={\n                    <InputAdornment position=\"start\">\n                        <Select\n                            value={protocol}\n                            onChange={(e) => {\n                                setProtocol(e.target.value);\n                                onChange({\n                                    target: {\n                                        value: e.target.value + domain,\n                                    },\n                                });\n                            }}\n                        >\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {error !== \"\" && (\n                <FormHelperText error={error !== \"\"}>{error}</FormHelperText>\n            )}\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst magicVars = [\n    {\n        value: \"{randomkey16}\",\n        des: \"16digitsRandomString\",\n        example: \"N6IimT5XZP324ACK\",\n        fileOnly: false,\n    },\n    {\n        value: \"{randomkey8}\",\n        des: \"8digitsRandomString\",\n        example: \"gWz78q30\",\n        fileOnly: false,\n    },\n    {\n        value: \"{timestamp}\",\n        des: \"secondTimestamp\",\n        example: \"1582692933\",\n        fileOnly: false,\n    },\n    {\n        value: \"{timestamp_nano}\",\n        des: \"nanoTimestamp\",\n        example: \"1582692933231834600\",\n        fileOnly: false,\n    },\n    {\n        value: \"{uid}\",\n        des: \"uid\",\n        example: \"1\",\n        fileOnly: false,\n    },\n    {\n        value: \"{originname}\",\n        des: \"originalFileName\",\n        example: \"MyPico.mp4\",\n        fileOnly: true,\n    },\n    {\n        value: \"{originname_without_ext}\",\n        des: \"originFileNameNoext\",\n        example: \"MyPico\",\n        fileOnly: true,\n    },\n    {\n        value: \"{ext}\",\n        des: \"extension\",\n        example: \".jpg\",\n        fileOnly: true,\n    },\n    {\n        value: \"{uuid}\",\n        des: \"uuidV4\",\n        example: \"31f0a770-659d-45bf-a5a9-166c06f33281\",\n        fileOnly: true,\n    },\n    {\n        value: \"{date}\",\n        des: \"date\",\n        example: \"20060102\",\n        fileOnly: false,\n    },\n    {\n        value: \"{datetime}\",\n        des: \"dateAndTime\",\n        example: \"20060102150405\",\n        fileOnly: false,\n    },\n    {\n        value: \"{year}\",\n        des: \"year\",\n        example: \"2006\",\n        fileOnly: false,\n    },\n    {\n        value: \"{month}\",\n        des: \"month\",\n        example: \"01\",\n        fileOnly: false,\n    },\n    {\n        value: \"{day}\",\n        des: \"day\",\n        example: \"02\",\n        fileOnly: false,\n    },\n    {\n        value: \"{hour}\",\n        des: \"hour\",\n        example: \"15\",\n        fileOnly: false,\n    },\n    {\n        value: \"{minute}\",\n        des: \"minute\",\n        example: \"04\",\n        fileOnly: false,\n    },\n    {\n        value: \"{second}\",\n        des: \"second\",\n        example: \"05\",\n        fileOnly: false,\n    },\n];\n\nexport default function MagicVar({ isFile, open, onClose, isSlave }) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy.magicVar\" });\n    const { t: tCommon } = useTranslation(\"common\");\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {isFile ? t(\"fileNameMagicVar\") : t(\"pathMagicVar\")}\n            </DialogTitle>\n            <DialogContent>\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>{t(\"variable\")}</TableCell>\n                                <TableCell>{t(\"description\")}</TableCell>\n                                <TableCell>{t(\"example\")}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {magicVars.map((m) => {\n                                if (!m.fileOnly || isFile) {\n                                    return (\n                                        <TableRow>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                {m.value}\n                                            </TableCell>\n                                            <TableCell>{t(m.des)}</TableCell>\n                                            <TableCell>{m.example}</TableCell>\n                                        </TableRow>\n                                    );\n                                }\n                            })}\n                            {!isFile && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{path}\"}\n                                    </TableCell>\n                                    <TableCell>{t(\"userUploadPath\")}</TableCell>\n                                    <TableCell>/MyFile/Documents/</TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    {tCommon(\"close\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","const boolFields = [\"IsOriginLinkEnable\", \"AutoRename\", \"IsPrivate\"];\nconst numberFields = [\"MaxSize\"];\nconst boolFieldsInOptions = [\"placeholder_with_size\", \"s3_path_style\"];\nconst numberFieldsInOptions = [\"chunk_size\", \"tps_limit\", \"tps_limit_burst\"];\nconst listJsonFieldsInOptions = [\"file_type\", \"thumb_exts\"];\n\nexport const transformResponse = (response) => {\n    boolFields.forEach(\n        (field) =>\n            (response.data[field] = response.data[field] ? \"true\" : \"false\")\n    );\n    numberFields.forEach(\n        (field) => (response.data[field] = response.data[field].toString())\n    );\n    boolFieldsInOptions.forEach(\n        (field) =>\n            (response.data.OptionsSerialized[field] = response.data\n                .OptionsSerialized[field]\n                ? \"true\"\n                : \"false\")\n    );\n    numberFieldsInOptions.forEach(\n        (field) =>\n            (response.data.OptionsSerialized[field] = response.data\n                .OptionsSerialized[field]\n                ? response.data.OptionsSerialized[field].toString()\n                : 0)\n    );\n\n    listJsonFieldsInOptions.forEach((field) => {\n        response.data.OptionsSerialized[field] = response.data\n            .OptionsSerialized[field]\n            ? response.data.OptionsSerialized[field].join(\",\")\n            : \"\";\n    });\n    return response;\n};\n\nexport const transformPolicyRequest = (policyCopy) => {\n    boolFields.forEach(\n        (field) => (policyCopy[field] = policyCopy[field] === \"true\")\n    );\n    numberFields.forEach(\n        (field) => (policyCopy[field] = parseInt(policyCopy[field]))\n    );\n    boolFieldsInOptions.forEach(\n        (field) =>\n            (policyCopy.OptionsSerialized[field] =\n                policyCopy.OptionsSerialized[field] === \"true\")\n    );\n    numberFieldsInOptions.forEach(\n        (field) =>\n            (policyCopy.OptionsSerialized[field] = parseInt(\n                policyCopy.OptionsSerialized[field]\n            ))\n    );\n\n    listJsonFieldsInOptions.forEach((field) => {\n        policyCopy.OptionsSerialized[field] = policyCopy.OptionsSerialized[\n            field\n        ]\n            ? policyCopy.OptionsSerialized[field].split(\",\")\n            : [];\n        if (\n            policyCopy.OptionsSerialized[field].length === 1 &&\n            policyCopy.OptionsSerialized[field][0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized[field] = [];\n        }\n    });\n\n    return policyCopy;\n};\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Select from \"@material-ui/core/Select\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"storageBucket\",\n        optional: false,\n    },\n    {\n        title: \"storagePathStep\",\n        optional: false,\n    },\n    {\n        title: \"sourceLinkStep\",\n        optional: false,\n    },\n    {\n        title: \"uploadSettingStep\",\n        optional: false,\n    },\n    {\n        title: \"corsSettingStep\",\n        optional: true,\n    },\n    {\n        title: \"callbackFunctionStep\",\n        optional: true,\n    },\n    {\n        title: \"finishStep\",\n        optional: false,\n    },\n];\n\nexport default function COSGuide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"cos\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      placeholder_with_size: \"false\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [region, setRegion] = useState(\"ap-chengdu\");\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = policy.Server;\n        }\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"corsPolicyAdded\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const creatCallback = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/scf\", {\n            id: policyID,\n            region: region,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"callbackFunctionAdded\"),\n                    \"success\"\n                );\n                setActiveStep(6);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy\n                    ? t(\"editCOSStoragePolicy\")\n                    : t(\"addCOSStoragePolicy\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">\n                                {t(\"optional\")}\n                            </Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>\n                                {t(label.title)}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.wanSiteURLDes\"}\n                                    components={[<strong key={0} />]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.createCOSBucketDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            href={\n                                                \"https://console.cloud.tencent.com/cos5\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.cosBucketNameDes\"}\n                                    components={[<code key={0} />]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"qiniuBucketName\")}\n                                    </InputLabel>\n                                    <Input\n                                        inputProps={{\n                                            pattern: \"[a-z0-9-]+-[0-9]+\",\n                                            title: t(\"cosBucketFormatError\"),\n                                        }}\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.cosBucketTypeDes\"}\n                                    components={[<code key={0} />]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"cosPrivateRW\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"cosPublicRW\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.cosAccessDomainDes\"}\n                                    components={[\n                                        <code key={0} />,\n                                        <code key={1} />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.Server}\n                                    onChange={handleChange(\"Server\")}\n                                    required\n                                    label={t(\"accessDomain\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"cosCDNDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"use\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notUse\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    <Trans\n                                        ns={\"dashboard\"}\n                                        i18nKey={\"policy.cosCDNDomainDes\"}\n                                        components={[\n                                            <Link\n                                                key={0}\n                                                href={\n                                                    \"https://console.cloud.tencent.com/cdn/access/guid\"\n                                                }\n                                                target={\"_blank\"}\n                                            />,\n                                        ]}\n                                    />\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={t(\"bucketCDNDomain\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.cosCredentialDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            href={\n                                                \"https://console.cloud.tencent.com/cam/capi\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"secretId\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: t(\"shouldNotContainSpace\"),\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"secretKey\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: t(\"shouldNotContainSpace\"),\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"nameThePolicyFirst\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"policyName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContental}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.pathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"path\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"pathOfFolderToStoreFiles\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"file\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"autoRenameStoredFile\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"keepOriginalFileName\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"renameRule\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            {t(\"back\")}\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enableGettingPermanentSourceLink\")}\n                                <br />\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    t(\n                                                        \"cannotEnableForPrivateBucket\"\n                                                    ),\n                                                    \"warning\"\n                                                );\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"allowed\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"forbidden\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileSize\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterSizeLimit\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"maxSizeOfSingleFile\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileExt\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterFileExt\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"extList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"createPlaceholderDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"createPlaceholder\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notCreatePlaceholder\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"ossCORSDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    {t(\"letCloudreveHelpMe\")}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            {t(\"skip\")}\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.cosCallbackDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            href={\n                                                \"https://console.cloud.tencent.com/scf/index?rid=16\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                    ]}\n                                />\n                                <br />\n                                <br />\n                            </Typography>\n                            <Typography variant={\"body2\"}>\n                                {t(\"cosCallbackCreate\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"cosBucketRegion\")}\n                                    </InputLabel>\n                                    <Select\n                                        value={region}\n                                        onChange={(e) =>\n                                            setRegion(e.target.value)\n                                        }\n                                        required\n                                    >\n                                        {[\n                                            \"ap-beijing\",\n                                            \"ap-chengdu\",\n                                            \"ap-guangzhou\",\n                                            \"ap-guangzhou-open\",\n                                            \"ap-hongkong\",\n                                            \"ap-mumbai\",\n                                            \"na-siliconvalley\",\n                                            \"na-toronto\",\n                                        ].map((v) => (\n                                            <MenuItem key={v} value={v}>\n                                                {t(v)}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => creatCallback()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    {t(\"letCloudreveHelpMe\")}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            {t(\"skip\")}\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 6 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            {t(\"furtherActions\")}\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            {t(\"backToList\")}\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport { getNumber } from \"../../../../utils\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"storagePathStep\",\n        optional: false,\n    },\n    {\n        title: \"sourceLinkStep\",\n        optional: false,\n    },\n    {\n        title: \"uploadSettingStep\",\n        optional: false,\n    },\n    {\n        title: \"finishStep\",\n        optional: false,\n    },\n];\n\nexport default function LocalGuide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"local\",\n                  Name: \"\",\n                  DirNameRule: \"uploads/{uid}/{path}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      chunk_size: 25 << 20,\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const checkPathSetting = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/path\", {\n            path: policy.DirNameRule,\n        })\n            .then(() => {\n                setActiveStep(1);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy\n                    ? t(\"editLocalStoragePolicy\")\n                    : t(\"addLocalStoragePolicy\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">\n                                {t(\"optional\")}\n                            </Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={t(label.title)} {...stepProps}>\n                            <StepLabel {...labelProps}>\n                                {t(label.title)}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={checkPathSetting}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.pathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"path\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"pathOfFolderToStoreFiles\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"file\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"autoRenameStoredFile\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"keepOriginalFileName\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"renameRule\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enableGettingPermanentSourceLink\")}\n                                <br />\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"allowed\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"forbidden\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"useCDN\")}\n                                    <br />\n                                    {t(\"useCDNDes\")}\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={(e) => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\",\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"use\")}\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"notUse\")}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        {t(\"cdnDomain\")}\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={t(\"cdnPrefix\")}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileSize\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterSizeLimit\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"maxSizeOfSingleFile\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileExt\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterFileExt\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"extList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"chunkSizeLabel\")}\n                                <br />\n                                {t(\"chunkSizeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={t(\"chunkSize\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"nameThePolicy\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"policyName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"finish\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            {t(\"furtherActions\")}\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            {t(\"backToList\")}\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport AlertDialog from \"../../Dialogs/Alert\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport { getNumber } from \"../../../../utils\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"applicationRegistration\",\n        optional: false,\n    },\n    {\n        title: \"storagePathStep\",\n        optional: false,\n    },\n    {\n        title: \"sourceLinkStep\",\n        optional: false,\n    },\n    {\n        title: \"uploadSettingStep\",\n        optional: false,\n    },\n    {\n        title: \"grantAccess\",\n        optional: false,\n    },\n    {\n        title: \"finishStep\",\n        optional: false,\n    },\n];\n\nexport default function OneDriveGuide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\n        props.policy && props.policy.OptionsSerialized.od_proxy\n            ? props.policy.OptionsSerialized.od_proxy !== \"\"\n            : false\n    );\n    const [useSharePoint, setUseSharePoint] = useState(\n        props.policy && props.policy.OptionsSerialized.od_driver\n            ? props.policy.OptionsSerialized.od_driver !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"onedrive\",\n                  Name: \"\",\n                  BucketName: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"https://graph.microsoft.com/v1.0\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      od_redirect: \"\",\n                      od_proxy: \"\",\n                      od_driver: \"\",\n                      chunk_size: 50 << 20,\n                      placeholder_with_size: \"false\",\n                      tps_limit: \"0\",\n                      tps_limit_burst: \"0\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [httpsAlert, setHttpsAlert] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [\"siteURL\"],\n        })\n            .then((response) => {\n                if (!response.data.siteURL.startsWith(\"https://\")) {\n                    setHttpsAlert(true);\n                }\n                if (policy.OptionsSerialized.od_redirect === \"\") {\n                    setPolicy({\n                        ...policy,\n                        OptionsSerialized: {\n                            ...policy.OptionsSerialized,\n                            od_redirect: new URL(\n                                \"/api/v3/callback/onedrive/auth\",\n                                response.data.siteURL\n                            ).toString(),\n                        },\n                    });\n                }\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const statOAuth = () => {\n        setLoading(true);\n        API.get(\"/admin/policy/\" + policyID + \"/oauth/onedrive\")\n            .then((response) => {\n                window.location.href = response.data;\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // baseURL处理\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\") {\n            policyCopy.BaseURL =\n                \"https://login.microsoftonline.com/common/oauth2/v2.0\";\n        } else {\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\";\n        }\n\n        if (!useCDN) {\n            policyCopy.OptionsSerialized.od_proxy = \"\";\n        }\n\n        if (!useSharePoint) {\n            policyCopy.OptionsSerialized.od_driver = \"\";\n        }\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={httpsAlert}\n                onClose={() => setHttpsAlert(false)}\n                title={t(\"warning\")}\n                msg={t(\"odHttpsWarning\")}\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy\n                    ? t(\"editOdStoragePolicy\")\n                    : t(\"addOdStoragePolicy\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">\n                                {t(\"optional\")}\n                            </Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>\n                                {t(label.title)}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.creatAadAppDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            href={\n                                                \"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                        <Link\n                                            key={1}\n                                            href={\n                                                \"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                        <code key={2} />,\n                                    ]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.createAadAppDes2\"}\n                                    components={[\n                                        <code key={0} />,\n                                        <code key={1} />,\n                                    ]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.createAadAppDes3\"}\n                                    values={{\n                                        url: policy.OptionsSerialized\n                                            .od_redirect,\n                                    }}\n                                    components={[\n                                        <code key={0} />,\n                                        <code key={1} />,\n                                        <code key={2} />,\n                                        <code key={3} />,\n                                        <code key={4} />,\n                                    ]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.aadAppIDDes\"}\n                                    components={[\n                                        <code key={0} />,\n                                        <code key={1} />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"aadAppID\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.addAppSecretDes\"}\n                                    components={[\n                                        <code key={0} />,\n                                        <code key={1} />,\n                                        <code key={2} />,\n                                        <code key={3} />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"aadAppSecret\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"aadAccountCloudDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\n                                                \"https://graph.microsoft.com/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"multiTenant\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\n                                                \"https://microsoftgraph.chinacloudapi.cn/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"gallatin\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>7</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"sharePointDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useSharePoint.toString()}\n                                        onChange={(e) => {\n                                            setUseSharePoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"saveToSharePoint\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"saveToOneDrive\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useSharePoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"spSiteURL\")}\n                                        </InputLabel>\n                                        <Input\n                                            placeholder={\n                                                \"https://example.sharepoint.com/sites/demo\"\n                                            }\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_driver\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_driver\"\n                                            )}\n                                            required={useSharePoint}\n                                            label={t(\"spSiteURL\")}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>8</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"odReverseProxyURLDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN.toString()}\n                                        onChange={(e) => {\n                                            setUseCDN(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"use\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notUse\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useCDN}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <DomainInput\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                            required={useCDN}\n                                            label={t(\"odReverseProxyURL\")}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>9</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"nameThePolicyFirst\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"policyName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.pathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"path\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"pathOfFolderToStoreFiles\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"file\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"autoRenameStoredFile\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"keepOriginalFileName\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"renameRule\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            {t(\"back\")}\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enableGettingPermanentSourceLink\")}\n                                <br />\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    t(\n                                                        \"cannotEnableForPrivateBucket\"\n                                                    ),\n                                                    \"warning\"\n                                                );\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"allowed\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"forbidden\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileSize\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterSizeLimit\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"maxSizeOfSingleFile\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileExt\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterFileExt\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"extList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"chunkSizeLabelOd\")}\n                                <br />\n                                {t(\"chunkSizeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={t(\"chunkSize\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(4, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"createPlaceholderDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"createPlaceholder\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notCreatePlaceholder\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(5, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitOdTPSDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            parseFloat(\n                                                policy.OptionsSerialized\n                                                    .tps_limit\n                                            ) === 0\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        tps_limit: \"5.0\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        tps_limit: \"0\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse\n                                in={\n                                    parseFloat(\n                                        policy.OptionsSerialized.tps_limit\n                                    ) !== 0\n                                }\n                            >\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"tps\")}\n                                        </InputLabel>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                step: 0.1,\n                                            }}\n                                            required\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .tps_limit\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"tps_limit\"\n                                            )}\n                                        />\n                                        <FormHelperText>\n                                            {t(\"tpsDes\")}\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"tpsBurst\")}\n                                        </InputLabel>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                step: 1,\n                                            }}\n                                            required\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .tps_limit_burst\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"tps_limit_burst\"\n                                            )}\n                                        />\n                                        <FormHelperText>\n                                            {t(\"tpsBurstDes\")}\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(4)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {props.policy\n                                    ? t(\"policySaved\")\n                                    : t(\"policyAdded\")}\n                            </Typography>\n                            <Typography variant={\"body2\"}>\n                                {t(\"odOauthDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={statOAuth}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    {t(\"gotoAuthPage\")}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}></div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            {t(\"furtherActions\")}\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            {t(\"backToList\")}\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"storageBucket\",\n        optional: false,\n    },\n    {\n        title: \"storagePathStep\",\n        optional: false,\n    },\n    {\n        title: \"sourceLinkStep\",\n        optional: false,\n    },\n    {\n        title: \"uploadSettingStep\",\n        optional: false,\n    },\n    {\n        title: \"corsSettingStep\",\n        optional: true,\n    },\n    {\n        title: \"finishStep\",\n        optional: false,\n    },\n];\n\nexport default function OSSGuide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [useLanEndpoint, setUseLanEndpoint] = useState(\n        props.policy && props.policy.OptionsSerialized.server_side_endpoint\n            ? props.policy.OptionsSerialized.server_side_endpoint !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"oss\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      server_side_endpoint: \"\",\n                      chunk_size: 25 << 20,\n                      placeholder_with_size: \"false\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        if (!useLanEndpoint) {\n            policyCopy.OptionsSerialized.server_side_endpoint = \"\";\n        }\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"corsPolicyAdded\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy\n                    ? t(\"editOSSStoragePolicy\")\n                    : t(\"addOSSStoragePolicy\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">\n                                {t(\"optional\")}\n                            </Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>\n                                {t(label.title)}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.wanSiteURLDes\"}\n                                    components={[<strong key={0} />]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.createOSSBucketDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            href={\n                                                \"https://oss.console.aliyun.com/overview\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                        <code key={1} />,\n                                        <code key={2} />,\n                                        <code key={3} />,\n                                    ]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.ossBucketNameDes\"}\n                                    components={[<code key={0} />]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"bucketName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"bucketTypeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"privateBucket\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"publicReadBucket\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.ossEndpointDes\"}\n                                    components={[\n                                        <code key={0} />,\n                                        <code key={1} />,\n                                        <code key={2} />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"endpoint\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        inputProps={{\n                                            pattern:\n                                                \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                            title: t(\"endpointDomainOnly\"),\n                                        }}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"ossLANEndpointDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useLanEndpoint.toString()}\n                                        onChange={(e) => {\n                                            setUseLanEndpoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"use\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notUse\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useLanEndpoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"intranetEndPoint\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={useLanEndpoint}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                            inputProps={{\n                                                pattern:\n                                                    \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                                title: t(\"endpointDomainOnly\"),\n                                            }}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"ossCDNDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"use\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notUse\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>7</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    <Trans\n                                        ns={\"dashboard\"}\n                                        i18nKey={\"policy.createOSSCDNDes\"}\n                                        components={[\n                                            <Link\n                                                key={0}\n                                                href={\n                                                    \"https://cdn.console.aliyun.com/domain/list\"\n                                                }\n                                                target={\"_blank\"}\n                                            />,\n                                        ]}\n                                    />\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={t(\"bucketCDNDomain\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.ossAKDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            href={\n                                                \"https://usercenter.console.aliyun.com/#/manage/ak\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: t(\"shouldNotContainSpace\"),\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Access Key Secret\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: t(\"shouldNotContainSpace\"),\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(8, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"nameThePolicyFirst\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"policyName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.pathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"path\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"pathOfFolderToStoreFiles\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"file\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"autoRenameStoredFile\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"keepOriginalFileName\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"renameRule\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            {t(\"back\")}\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enableGettingPermanentSourceLink\")}\n                                <br />\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    t(\n                                                        \"cannotEnableForPrivateBucket\"\n                                                    ),\n                                                    \"warning\"\n                                                );\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"allowed\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"forbidden\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileSize\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterSizeLimit\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"maxSizeOfSingleFile\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileExt\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterFileExt\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"extList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"chunkSizeLabelOSS\")}\n                                <br />\n                                {t(\"chunkSizeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={100 * 1024}\n                                    max={5368709120}\n                                    label={t(\"chunkSize\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(4, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"createPlaceholderDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"createPlaceholder\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notCreatePlaceholder\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"ossCORSDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    {t(\"letCloudreveHelpMe\")}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            {t(\"skip\")}\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            {t(\"furtherActions\")}\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            {t(\"backToList\")}\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"storageBucket\",\n        optional: false,\n    },\n    {\n        title: \"storagePathStep\",\n        optional: false,\n    },\n    {\n        title: \"sourceLinkStep\",\n        optional: false,\n    },\n    {\n        title: \"uploadSettingStep\",\n        optional: false,\n    },\n    {\n        title: \"finishStep\",\n        optional: false,\n    },\n];\n\nexport default function RemoteGuide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    // const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"qiniu\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      mimetype: \"\",\n                      chunk_size: 25 << 20,\n                      placeholder_with_size: \"false\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy\n                    ? t(\"editQiniuStoragePolicy\")\n                    : t(\"addQiniuStoragePolicy\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">\n                                {t(\"optional\")}\n                            </Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>\n                                {t(label.title)}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.wanSiteURLDes\"}\n                                    components={[<strong key={0} />]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.createQiniuBucket\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            href={\n                                                \"https://portal.qiniu.com/create\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enterQiniuBucket\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"qiniuBucketName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"bucketTypeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"privateBucket\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"publicBucket\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"bucketCDNDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={t(\"bucketCDNDomain\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"qiniuCredentialDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"ak\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"sk\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.pathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"path\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"pathOfFolderToStoreFiles\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"file\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"autoRenameStoredFile\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"keepOriginalFileName\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"renameRule\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            {t(\"back\")}\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enableGettingPermanentSourceLink\")}\n                                <br />\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    t(\n                                                        \"cannotEnableForPrivateBucket\"\n                                                    ),\n                                                    \"warning\"\n                                                );\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"allowed\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"forbidden\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileSize\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterSizeLimit\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"maxSizeOfSingleFile\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileExt\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterFileExt\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"extList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitMimeType\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .mimetype === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"image/*\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {getNumber(4, [\n                                        policy.MaxSize !== \"0\",\n                                        policy.OptionsSerialized.file_type !==\n                                            \"\",\n                                    ])}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"mimeTypeDes\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"mimeTypeList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(4, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                    policy.OptionsSerialized.mimetype !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"chunkSizeLabelQiniu\")}\n                                <br />\n                                {t(\"chunkSizeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={1 << 20}\n                                    max={1024 << 20}\n                                    label={t(\"chunkSize\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(5, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                    policy.OptionsSerialized.mimetype !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"createPlaceholderDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"createPlaceholder\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notCreatePlaceholder\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"nameThePolicy\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"policyName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"finish\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            {t(\"furtherActions\")}\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            {t(\"backToList\")}\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber, randomStr } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontSize: \"14px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"storageNode\",\n        optional: false,\n    },\n    {\n        title: \"storagePathStep\",\n        optional: false,\n    },\n    {\n        title: \"sourceLinkStep\",\n        optional: false,\n    },\n    {\n        title: \"uploadSettingStep\",\n        optional: false,\n    },\n    {\n        title: \"finishStep\",\n        optional: false,\n    },\n];\n\nexport default function RemoteGuide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"remote\",\n                  Name: \"\",\n                  Server: \"https://example.com:5212\",\n                  SecretKey: randomStr(64),\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      chunk_size: 25 << 20,\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = () => {\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: policy.Server,\n            secret: policy.SecretKey,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"communicationOK\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy\n                    ? t(\"editRemoteStoragePolicy\")\n                    : t(\"addRemoteStoragePolicy\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">\n                                {t(\"optional\")}\n                            </Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>\n                                {t(label.title)}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                        {t(\"remoteDescription\")}\n                    </Alert>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"remoteCopyBinaryDescription\")}\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"remoteSecretDescription\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"remoteSecret\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            minlength: 64,\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"modifyRemoteConfig\")}\n                                <br />\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.addRemoteConfigDes\"}\n                                    components={[<code key={0} />]}\n                                />\n                            </Typography>\n                            <pre>\n                                [System]\n                                <br />\n                                Mode = slave\n                                <br />\n                                Listen = :5212\n                                <br />\n                                <br />\n                                [Slave]\n                                <br />\n                                Secret = {policy.SecretKey}\n                                <br />\n                                <br />\n                                [CORS]\n                                <br />\n                                AllowOrigins = *<br />\n                                AllowMethods = OPTIONS,GET,POST\n                                <br />\n                                AllowHeaders = *<br />\n                            </pre>\n                            <Typography variant={\"body2\"}>\n                                {t(\"remoteConfigDifference\")}\n                                <ul>\n                                    <li>\n                                        <Trans\n                                            ns={\"dashboard\"}\n                                            i18nKey={\n                                                \"policy.remoteConfigDifference1\"\n                                            }\n                                            components={[\n                                                <code key={0} />,\n                                                <code key={1} />,\n                                                <code key={2} />,\n                                            ]}\n                                        />\n                                    </li>\n                                    <li>\n                                        <Trans\n                                            ns={\"dashboard\"}\n                                            i18nKey={\n                                                \"policy.remoteConfigDifference2\"\n                                            }\n                                            components={[\n                                                <code key={0} />,\n                                                <code key={1} />,\n                                            ]}\n                                        />\n                                    </li>\n                                    <li>\n                                        <Trans\n                                            ns={\"dashboard\"}\n                                            i18nKey={\n                                                \"policy.remoteConfigDifference3\"\n                                            }\n                                            components={[<code key={0} />]}\n                                        />\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"inputRemoteAddress\")}\n                                <br />\n                                {t(\"inputRemoteAddressDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"remoteAddress\")}\n                                    </InputLabel>\n                                    <Input\n                                        fullWidth\n                                        required\n                                        type={\"url\"}\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"testCommunicationDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    onClick={() => testSlave()}\n                                    variant={\"outlined\"}\n                                    color={\"primary\"}\n                                >\n                                    {t(\"testCommunication\")}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"file\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"pathOfFolderToStoreFiles\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"autoRenameStoredFile\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"keepOriginalFileName\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"renameRule\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            {t(\"back\")}\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enableGettingPermanentSourceLink\")}\n                                <br />\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"allowed\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"forbidden\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"useCDN\")}\n                                    <br />\n                                    {t(\"useCDNDes\")}\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={(e) => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\",\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"use\")}\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"notUse\")}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        {t(\"cdnDomain\")}\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={t(\"cdnPrefix\")}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileSize\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterSizeLimit\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"maxSizeOfSingleFile\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileExt\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterFileExt\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"extList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"chunkSizeLabel\")}\n                                <br />\n                                {t(\"chunkSizeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={t(\"chunkSize\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"nameThePolicy\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"policyName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"finish\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            {t(\"furtherActions\")}\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            {t(\"backToList\")}\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"storageBucket\",\n        optional: false,\n    },\n    {\n        title: \"storagePathStep\",\n        optional: false,\n    },\n    {\n        title: \"sourceLinkStep\",\n        optional: false,\n    },\n    {\n        title: \"uploadSettingStep\",\n        optional: false,\n    },\n    {\n        title: \"finishStep\",\n        optional: false,\n    },\n];\n\nexport default function UpyunGuide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"upyun\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"false\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      token: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy\n                    ? t(\"editUpyunStoragePolicy\")\n                    : t(\"addUpyunStoragePolicy\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>\n                                {t(label.title)}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.wanSiteURLDes\"}\n                                    components={[<strong key={0} />]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.createUpyunBucketDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            href={\n                                                \"https://console.upyun.com/services/create/file/\"\n                                            }\n                                            target={\"_blank\"}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"storageServiceNameDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"storageServiceName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"operatorNameDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"operatorName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"operatorPassword\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"upyunCDNDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={t(\"bucketCDNDomain\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"upyunOptionalDes\")}\n                                <br />\n                                {t(\"upyunTokenDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"tokenEnabled\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"tokenDisabled\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsPrivate === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"upyunTokenSecretDes\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"upyunTokenSecret\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                            required={\n                                                policy.IsPrivate === \"true\"\n                                            }\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.pathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"path\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"pathOfFolderToStoreFiles\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"file\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"autoRenameStoredFile\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"keepOriginalFileName\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"renameRule\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            {t(\"back\")}\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enableGettingPermanentSourceLink\")}\n                                <br />\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    t(\n                                                        \"cannotEnableForTokenProtectedBucket\"\n                                                    ),\n                                                    \"warning\"\n                                                );\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"allowed\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"forbidden\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileSize\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterSizeLimit\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"maxSizeOfSingleFile\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileExt\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterFileExt\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"extList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"nameThePolicy\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"policyName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"finish\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            {t(\"furtherActions\")}\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            {t(\"backToList\")}\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport { getNumber } from \"../../../../utils\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AlertDialog from \"../../Dialogs/Alert\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"storageBucket\",\n        optional: false,\n    },\n    {\n        title: \"storagePathStep\",\n        optional: false,\n    },\n    {\n        title: \"sourceLinkStep\",\n        optional: false,\n    },\n    {\n        title: \"uploadSettingStep\",\n        optional: false,\n    },\n    {\n        title: \"corsSettingStep\",\n        optional: true,\n    },\n    {\n        title: \"finishStep\",\n        optional: false,\n    },\n];\n\nconst regions = {\n    \"us-east-2\": \"US East (Ohio)\",\n    \"us-east-1\": \"US East (N. Virginia)\",\n    \"us-west-1\": \"US West (N. California)\",\n    \"us-west-2\": \"US West (Oregon)\",\n    \"af-south-1\": \"Africa (Cape Town)\",\n    \"ap-east-1\": \"Asia Pacific (Hong Kong)\",\n    \"ap-south-1\": \"Asia Pacific (Mumbai)\",\n    \"ap-northeast-3\": \"Asia Pacific (Osaka-Local)\",\n    \"ap-northeast-2\": \"Asia Pacific (Seoul)\",\n    \"ap-southeast-1\": \"Asia Pacific (Singapore)\",\n    \"ap-southeast-2\": \"Asia Pacific (Sydney)\",\n    \"ap-northeast-1\": \"Asia Pacific (Tokyo)\",\n    \"ca-central-1\": \"Canada (Central)\",\n    \"cn-north-1\": \"China (Beijing)\",\n    \"cn-northwest-1\": \"China (Ningxia)\",\n    \"eu-central-1\": \"Europe (Frankfurt)\",\n    \"eu-west-1\": \"Europe (Ireland)\",\n    \"eu-west-2\": \"Europe (London)\",\n    \"eu-south-1\": \"Europe (Milan)\",\n    \"eu-west-3\": \"Europe (Paris)\",\n    \"eu-north-1\": \"Europe (Stockholm)\",\n    \"me-south-1\": \"Middle East (Bahrain)\",\n    \"sa-east-1\": \"South America (São Paulo)\",\n};\n\nexport default function S3Guide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(true);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"s3\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      region: \"us-east-2\",\n                      chunk_size: 25 << 20,\n                      placeholder_with_size: \"false\",\n                      s3_path_style: \"true\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"corsPolicyAdded\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={alertOpen}\n                onClose={() => setAlertOpen(false)}\n                title={t(\"warning\")}\n                msg={t(\"s3SelfHostWarning\")}\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy\n                    ? t(\"editS3StoragePolicy\")\n                    : t(\"addS3StoragePolicy\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">\n                                {t(\"optional\")}\n                            </Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>\n                                {t(label.title)}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.s3BucketDes\"}\n                                    components={[<code key={0} />]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"bucketName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"bucketTypeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"publicAccessDisabled\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"publicAccessEnabled\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.s3EndpointDes\"}\n                                    components={[<code key={0} />]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"endpoint\")}\n                                    </InputLabel>\n                                    <Input\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.s3EndpointPathStyle\"}\n                                    components={[<code key={0} />]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .s3_path_style\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"s3_path_style\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"usePathEndpoint\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"useHostnameEndpoint\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"selectRegionDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <Autocomplete\n                                        options={Object.keys(regions)}\n                                        freeSolo\n                                        value={policy.OptionsSerialized.region}\n                                        onInputChange={(_, value) =>\n                                            handleOptionChange(\"region\")({\n                                                target: { value: value },\n                                            })\n                                        }\n                                        renderOption={(option) => (\n                                            <React.Fragment>\n                                                {regions[option]}\n                                            </React.Fragment>\n                                        )}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                style={{ width: \"100%\" }}\n                                                {...params}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"useCDN\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"use\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notUse\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>7</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"bucketCDNDomain\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={t(\"bucketCDNDomain\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enterAccessCredentials\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"accessKey\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: t(\"shouldNotContainSpace\"),\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"secretKey\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: t(\"shouldNotContainSpace\"),\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(8, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"nameThePolicyFirst\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"policyName\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.pathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"path\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"pathOfFolderToStoreFiles\")}\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\n                                    components={[\n                                        <Link\n                                            key={0}\n                                            color={\"secondary\"}\n                                            href={\"javascript:void()\"}\n                                            onClick={() => setMagicVar(\"file\")}\n                                        />,\n                                    ]}\n                                />\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"autoRenameStoredFile\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"keepOriginalFileName\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"renameRule\")}\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            {t(\"back\")}\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"enableGettingPermanentSourceLink\")}\n                                <br />\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    t(\n                                                        \"cannotEnableForPrivateBucket\"\n                                                    ),\n                                                    \"warning\"\n                                                );\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"allowed\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"forbidden\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileSize\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterSizeLimit\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"maxSizeOfSingleFile\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"limitFileExt\")}\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"limit\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notLimit\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    {t(\"enterFileExt\")}\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"extList\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"chunkSizeLabelS3\")}\n                                <br />\n                                {t(\"chunkSizeDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <SizeInput\n                                    value={policy.OptionsSerialized.chunk_size}\n                                    onChange={handleOptionChange(\"chunk_size\")}\n                                    min={5 << 20}\n                                    max={53687091200}\n                                    label={t(\"chunkSize\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(4, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"createPlaceholderDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={\n                                            policy.OptionsSerialized\n                                                .placeholder_with_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"placeholder_with_size\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"createPlaceholder\")}\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label={t(\"notCreatePlaceholder\")}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            {t(\"back\")}\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            {t(\"next\")}\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                {t(\"ossCORSDes\")}\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    {t(\"letCloudreveHelpMe\")}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            {t(\"skip\")}\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            {t(\"furtherActions\")}\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            {t(\"backToList\")}\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function AddPolicyParent() {\n    const classes = useStyles();\n\n    const { type } = useParams();\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {type === \"local\" && <LocalGuide />}\n                {type === \"remote\" && <RemoteGuide />}\n                {type === \"qiniu\" && <QiniuGuide />}\n                {type === \"oss\" && <OSSGuide />}\n                {type === \"upyun\" && <UpyunGuide />}\n                {type === \"cos\" && <COSGuide />}\n                {type === \"onedrive\" && <OneDriveGuide />}\n                {type === \"s3\" && <S3Guide />}\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport API from \"../../../../middleware/Api\";\nimport { useTranslation } from \"react-i18next\";\nimport { transformPolicyRequest } from \"../utils\";\n\nexport default function EditPro(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\n    const [, setLoading] = useState(false);\n    const [policy, setPolicy] = useState(props.policy);\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy = transformPolicyRequest(policyCopy);\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{t(\"editPolicy\")}</Typography>\n            <TableContainer>\n                <form onSubmit={submitPolicy}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>{t(\"setting\")}</TableCell>\n                                <TableCell>{t(\"value\")}</TableCell>\n                                <TableCell>{t(\"description\")}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"id\")}\n                                </TableCell>\n                                <TableCell>{policy.ID}</TableCell>\n                                <TableCell>{t(\"policyID\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"type\")}\n                                </TableCell>\n                                <TableCell>{policy.Type}</TableCell>\n                                <TableCell>{t(\"policyType\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"name\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            required\n                                            value={policy.Name}\n                                            onChange={handleChange(\"Name\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"policyName\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"server\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.Server}\n                                            onChange={handleChange(\"Server\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"policyEndpoint\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"bucketName\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BucketName}\n                                            onChange={handleChange(\n                                                \"BucketName\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"bucketID\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"privateBucket\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsPrivate}\n                                            onChange={handleChange(\"IsPrivate\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"yes\")}\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"no\")}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"privateBucketDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"resourceRootURL\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"resourceRootURLDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"accessKey\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.AccessKey}\n                                            onChange={handleChange(\"AccessKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"akDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"secretKey\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.SecretKey}\n                                            onChange={handleChange(\"SecretKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"secretKey\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"maxSizeBytes\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min: 0,\n                                                step: 1,\n                                            }}\n                                            value={policy.MaxSize}\n                                            onChange={handleChange(\"MaxSize\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"maxSizeBytesDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"autoRename\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.AutoRename}\n                                            onChange={handleChange(\n                                                \"AutoRename\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"yes\")}\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"no\")}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"autoRenameDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"storagePath\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.DirNameRule}\n                                            onChange={handleChange(\n                                                \"DirNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"storagePathDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"fileName\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"fileNameDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"allowGetSourceLink\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsOriginLinkEnable}\n                                            onChange={handleChange(\n                                                \"IsOriginLinkEnable\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"yes\")}\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"no\")}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    {t(\"allowGetSourceLinkDes\")}\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"upyunToken\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"upyunOnly\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"allowedFileExtension\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"emptyIsNoLimit\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"allowedMimetype\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"qiniuOnly\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"odRedirectURL\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_redirect\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_redirect\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    {t(\"noModificationNeeded\")}\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"odReverseProxy\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"odOnly\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"odDriverID\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_driver\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_driver\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"odDriverIDDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"s3Region\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.region\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"region\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"s3Only\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"lanEndpoint\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"ossOnly\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"chunkSizeBytes\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min: 0,\n                                                step: 1,\n                                            }}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .chunk_size\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"chunk_size\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"chunkSizeBytesDes\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"placeHolderWithSize\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .placeholder_with_size\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"placeholder_with_size\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"yes\")}\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"no\")}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    {t(\"placeHolderWithSizeDes\")}\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"tps\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                step: 0.1,\n                                            }}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .tps_limit\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"tps_limit\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"odOnly\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"tpsBurst\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                step: 1,\n                                            }}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .tps_limit_burst\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"tps_limit_burst\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"odOnly\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"usePathEndpoint\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .s3_path_style\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"s3_path_style\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"yes\")}\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label={t(\"no\")}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"s3Only\")}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {t(\"thumbExt\")}\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .thumb_exts\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"thumb_exts\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>{t(\"thumbExtDes\")}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Button\n                        type={\"submit\"}\n                        color={\"primary\"}\n                        variant={\"contained\"}\n                        style={{ margin: 8 }}\n                    >\n                        {t(\"saveChanges\")}\n                    </Button>\n                </form>\n            </TableContainer>\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport EditPro from \"./Guid/EditPro\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\nimport { transformResponse } from \"./utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function EditPolicyPreload() {\n    const classes = useStyles();\n    const [type, setType] = useState(\"\");\n    const [policy, setPolicy] = useState({});\n\n    const { mode, id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setType(\"\");\n        API.get(\"/admin/policy/\" + id)\n            .then((response) => {\n                response = transformResponse(response);\n                setPolicy(response.data);\n                setType(response.data.Type);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {mode === \"guide\" && (\n                    <>\n                        {type === \"local\" && <LocalGuide policy={policy} />}\n                        {type === \"remote\" && <RemoteGuide policy={policy} />}\n                        {type === \"qiniu\" && <QiniuGuide policy={policy} />}\n                        {type === \"oss\" && <OSSGuide policy={policy} />}\n                        {type === \"upyun\" && <UpyunGuide policy={policy} />}\n                        {type === \"cos\" && <COSGuide policy={policy} />}\n                        {type === \"onedrive\" && (\n                            <OneDriveGuide policy={policy} />\n                        )}\n                        {type === \"s3\" && <S3Guide policy={policy} />}\n                    </>\n                )}\n\n                {mode === \"pro\" && type !== \"\" && <EditPro policy={policy} />}\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n}));\n\nconst columns = [\n    { id: \"#\", minWidth: 50 },\n    { id: \"name\", minWidth: 170 },\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\n    {\n        id: \"count\",\n        minWidth: 50,\n        align: \"right\",\n    },\n    {\n        id: \"size\",\n        minWidth: 100,\n        align: \"right\",\n    },\n    {\n        id: \"action\",\n        minWidth: 170,\n        align: \"right\",\n    },\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Group() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"group\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [policies, setPolicies] = React.useState({});\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/group/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then((response) => {\n                setGroups(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n                setPolicies(response.data.policies);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const deletePolicy = (id) => {\n        API.delete(\"/admin/group/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"deleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/group/add\")}\n                    variant={\"contained\"}\n                >\n                    {t(\"new\")}\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        {tDashboard(\"policy.refresh\")}\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {t(column.id)}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {groups.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {row.PolicyList !== null &&\n                                            row.PolicyList.map((pid, key) => {\n                                                let res = \"\";\n                                                if (policies[pid]) {\n                                                    res += policies[pid].Name;\n                                                }\n                                                if (\n                                                    key !==\n                                                    row.PolicyList.length - 1\n                                                ) {\n                                                    res += \" / \";\n                                                }\n                                                return res;\n                                            })}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(row.MaxStorage)}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip\n                                            title={tDashboard(\"policy.edit\")}\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/group/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip\n                                            title={tDashboard(\"policy.delete\")}\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Link } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\n// function getStyles(name, personName, theme) {\n//     return {\n//         fontWeight:\n//             personName.indexOf(name) === -1\n//                 ? theme.typography.fontWeightRegular\n//                 : theme.typography.fontWeightMedium\n//     };\n// }\n\nexport default function GroupForm(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"group\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [group, setGroup] = useState(\n        props.group\n            ? props.group\n            : {\n                  ID: 0,\n                  Name: \"\",\n                  MaxStorage: \"1073741824\", // 转换类型\n                  ShareEnabled: \"true\", // 转换类型\n                  WebDAVEnabled: \"true\", // 转换类型\n                  SpeedLimit: \"0\", // 转换类型\n                  PolicyList: 1, // 转换类型,至少选择一个\n                  OptionsSerialized: {\n                      // 批量转换类型\n                      share_download: \"true\",\n                      aria2_options: \"{}\", // json decode\n                      compress_size: \"0\",\n                      decompress_size: \"0\",\n                      source_batch: \"0\",\n                      aria2_batch: \"1\",\n                  },\n              }\n    );\n    const [policies, setPolicies] = useState({});\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                response.data.items.forEach((v) => {\n                    res[v.ID] = v.Name;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            [name]: value,\n        });\n    };\n\n    const handleOptionCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: value,\n            },\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const groupCopy = {\n            ...group,\n            OptionsSerialized: { ...group.OptionsSerialized },\n        };\n\n        // 布尔值转换\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\n            groupCopy[v] = groupCopy[v] === \"true\";\n        });\n        [\n            \"archive_download\",\n            \"archive_task\",\n            \"one_time_download\",\n            \"share_download\",\n            \"webdav_proxy\",\n            \"aria2\",\n            \"redirected_source\",\n            \"advance_delete\"\n        ].forEach((v) => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] =\n                    groupCopy.OptionsSerialized[v] === \"true\";\n            }\n        });\n\n        // 整型转换\n        [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\n            groupCopy[v] = parseInt(groupCopy[v]);\n        });\n        [\n            \"compress_size\",\n            \"decompress_size\",\n            \"source_batch\",\n            \"aria2_batch\",\n        ].forEach((v) => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] = parseInt(\n                    groupCopy.OptionsSerialized[v]\n                );\n            }\n        });\n        groupCopy.PolicyList = [parseInt(groupCopy.PolicyList)];\n        // JSON转换\n        try {\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(\n                groupCopy.OptionsSerialized.aria2_options\n            );\n        } catch (e) {\n            ToggleSnackbar(\"top\", \"right\", t(\"aria2FormatError\"), \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/admin/group\", {\n            group: groupCopy,\n        })\n            .then(() => {\n                history.push(\"/admin/group\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.group ? t(\"saved\") : t(\"added\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {group.ID === 0 && t(\"new\")}\n                        {group.ID !== 0 && t(\"editGroup\", { group: group.Name })}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        {group.ID !== 3 && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"nameOfGroup\")}\n                                        </InputLabel>\n                                        <Input\n                                            value={group.Name}\n                                            onChange={handleChange(\"Name\")}\n                                            required\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            {t(\"nameOfGroupDes\")}\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"storagePolicy\")}\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-mutiple-chip-label\"\n                                            id=\"demo-mutiple-chip\"\n                                            value={group.PolicyList}\n                                            onChange={handleChange(\n                                                \"PolicyList\"\n                                            )}\n                                            input={\n                                                <Input id=\"select-multiple-chip\" />\n                                            }\n                                        >\n                                            {Object.keys(policies).map(\n                                                (pid) => (\n                                                    <MenuItem\n                                                        key={pid}\n                                                        value={pid}\n                                                    >\n                                                        {policies[pid]}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                        <FormHelperText id=\"component-helper-text\">\n                                            {t(\"storageDes\")}\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <SizeInput\n                                            value={group.MaxStorage}\n                                            onChange={handleChange(\n                                                \"MaxStorage\"\n                                            )}\n                                            min={0}\n                                            max={9223372036854775807}\n                                            label={t(\"initialStorageQuota\")}\n                                            required\n                                        />\n                                    </FormControl>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"initialStorageQuotaDes\")}\n                                    </FormHelperText>\n                                </div>\n                            </>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={group.SpeedLimit}\n                                    onChange={handleChange(\"SpeedLimit\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={t(\"downloadSpeedLimit\")}\n                                    suffix={\"/s\"}\n                                    required\n                                />\n                            </FormControl>\n                            <FormHelperText id=\"component-helper-text\">\n                                {t(\"downloadSpeedLimitDes\")}\n                            </FormHelperText>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"bathSourceLinkLimit\")}\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={\n                                            group.OptionsSerialized.source_batch\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"source_batch\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"bathSourceLinkLimitDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.ShareEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"ShareEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label={t(\"allowCreateShareLink\")}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"allowCreateShareLinkDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_download\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"allowDownloadShare\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"allowDownloadShareDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.WebDAVEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"WebDAVEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label={t(\"allowWabDAV\")}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"allowWabDAVDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        {group.ID !== 3 && group.WebDAVEnabled === \"true\" && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized.webdav_proxy ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"webdav_proxy\"\n                                                )}\n                                            />\n                                        }\n                                        label={t(\"allowWabDAVProxy\")}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"allowWabDAVProxyDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .one_time_download ===\n                                                \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"one_time_download\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"disableMultipleDownload\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"disableMultipleDownloadDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .aria2 === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"aria2\"\n                                                )}\n                                            />\n                                        }\n                                        label={t(\"allowRemoteDownload\")}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"allowRemoteDownloadDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"aria2Options\")}\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        value={\n                                            group.OptionsSerialized\n                                                .aria2_options\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_options\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"aria2OptionsDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"aria2BatchSize\")}\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={\n                                            group.OptionsSerialized.aria2_batch\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_batch\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"aria2BatchSizeDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </Collapse>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_download\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"serverSideBatchDownload\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"serverSideBatchDownloadDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .archive_task === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"archive_task\"\n                                                )}\n                                            />\n                                        }\n                                        label={t(\"compressTask\")}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"compressTaskDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <Collapse\n                            in={group.OptionsSerialized.archive_task === \"true\"}\n                        >\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .compress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"compress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"compressSize\")}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"compressSizeDes\")}\n                                </FormHelperText>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .decompress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"decompress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={t(\"decompressSize\")}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"decompressSizeDes\")}\n                                </FormHelperText>\n                            </div>\n                        </Collapse>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .redirected_source === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"redirected_source\"\n                                                )}\n                                            />\n                                        }\n                                        label={t(\"redirectedSource\")}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        <Trans\n                                            ns={\"dashboard\"}\n                                            i18nKey={\"group.redirectedSourceDes\"}\n                                            components={[\n                                                <Link\n                                                    href={tDashboard(\"policy.comparesStoragePoliciesLink\")}\n                                                    key={0}\n                                                    target={\"_blank\"}\n                                                />,\n                                            ]}\n                                        />\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .advance_delete ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"advance_delete\"\n                                                )}\n                                            />\n                                        }\n                                        label={t(\"advanceDelete\")}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"advanceDeleteDes\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {tDashboard(\"settings.save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport GroupForm from \"./GroupForm\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function EditGroupPreload() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"group\" });\n    const [group, setGroup] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setGroup({});\n        API.get(\"/admin/group/\" + id)\n            .then((response) => {\n                // 布尔值转换\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\n                    response.data[v] = response.data[v] ? \"true\" : \"false\";\n                });\n                [\n                    \"archive_download\",\n                    \"archive_task\",\n                    \"one_time_download\",\n                    \"share_download\",\n                    \"webdav_proxy\",\n                    \"aria2\",\n                    \"redirected_source\",\n                    \"advance_delete\"\n                ].forEach((v) => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[v] = response.data\n                            .OptionsSerialized[v]\n                            ? \"true\"\n                            : \"false\";\n                    }\n                });\n\n                // 整型转换\n                [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\n                    response.data[v] = response.data[v].toString();\n                });\n                [\n                    \"compress_size\",\n                    \"decompress_size\",\n                    \"source_batch\",\n                    \"aria2_batch\",\n                ].forEach((v) => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[\n                            v\n                        ] = response.data.OptionsSerialized[v].toString();\n                    }\n                });\n                response.data.PolicyList = response.data.PolicyList[0];\n\n                // JSON转换\n                if (\n                    response.data.OptionsSerialized.aria2_options === undefined\n                ) {\n                    response.data.OptionsSerialized.aria2_options = \"{}\";\n                } else {\n                    try {\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(\n                            response.data.OptionsSerialized.aria2_options\n                        );\n                    } catch (e) {\n                        ToggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            t(\"aria2FormatError\"),\n                            \"warning\"\n                        );\n                        return;\n                    }\n                }\n                setGroup(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{group.ID !== undefined && <GroupForm group={group} />}</div>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function UserFilter({ setFilter, setSearch, open, onClose }) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"user\" });\n    const { t: tCommon } = useTranslation(\"common\");\n    const [input, setInput] = useState({\n        group_id: \"all\",\n        status: \"all\",\n    });\n    const [groups, setGroups] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                nick: keywords,\n                email: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {t(\"filterCondition\")}\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        {t(\"group\")}\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.group_id}\n                        onChange={handleChange(\"group_id\")}\n                    >\n                        <MenuItem value={\"all\"}>{t(\"all\")}</MenuItem>\n                        {groups.map((v) => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        {t(\"userStatus\")}\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.status}\n                        onChange={handleChange(\"status\")}\n                    >\n                        <MenuItem value={\"all\"}>{t(\"all\")}</MenuItem>\n                        <MenuItem value={\"0\"}>{t(\"active\")}</MenuItem>\n                        <MenuItem value={\"1\"}>{t(\"notActivated\")}</MenuItem>\n                        <MenuItem value={\"2\"}>{t(\"banned\")}</MenuItem>\n                        <MenuItem value={\"3\"}>{t(\"bannedBySys\")}</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label={t(\"searchNickUserName\")}\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    {tCommon(\"cancel\")}\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    {t(\"apply\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Block, Delete, Edit, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport UserFilter from \"../Dialogs/UserFilter\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Group() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"user\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/user/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"deleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const block = (id) => {\n        setLoading(true);\n        API.patch(\"/admin/user/ban/\" + id)\n            .then((response) => {\n                setUsers(\n                    users.map((v) => {\n                        if (v.ID === id) {\n                            const newUser = { ...v, Status: response.data };\n                            return newUser;\n                        }\n                        return v;\n                    })\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = users.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <UserFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    style={{ alignSelf: \"center\" }}\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/user/add\")}\n                    variant={\"contained\"}\n                >\n                    {t(\"new\")}\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title={t(\"filter\")}>\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        {tDashboard(\"policy.refresh\")}\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            {t(\"selectedObjects\", { num: selected.length })}\n                        </Typography>\n                        <Tooltip title={tDashboard(\"policy.delete\")}>\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < users.length\n                                        }\n                                        checked={\n                                            users.length > 0 &&\n                                            selected.length === users.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {tDashboard(\"node.#\")}\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"nick\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"nick\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {t(\"nick\")}\n                                        {orderBy[0] === \"nick\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 170 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"email\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"email\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {t(\"email\")}\n                                        {orderBy[0] === \"email\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    {t(\"group\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 50 }}>\n                                    {t(\"status\")}\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 80 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"storage\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"storage\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {t(\"usedStorage\")}\n                                        {orderBy[0] === \"storage\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    {tDashboard(\"policy.actions\")}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Nick}</TableCell>\n                                    <TableCell>{row.Email}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/group/edit/\" +\n                                                row.Group.ID\n                                            }\n                                        >\n                                            {row.Group.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && (\n                                            <Typography\n                                                style={{\n                                                    color: theme.palette.success\n                                                        .main,\n                                                }}\n                                                variant={\"body2\"}\n                                            >\n                                                {t(\"active\")}\n                                            </Typography>\n                                        )}\n                                        {row.Status === 1 && (\n                                            <Typography\n                                                color={\"textSecondary\"}\n                                                variant={\"body2\"}\n                                            >\n                                                {t(\"notActivated\")}\n                                            </Typography>\n                                        )}\n                                        {row.Status === 2 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                {t(\"banned\")}\n                                            </Typography>\n                                        )}\n                                        {row.Status === 3 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                {t(\"bannedBySys\")}\n                                            </Typography>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Storage)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip\n                                            title={tDashboard(\"node.edit\")}\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/user/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={t(\"toggleBan\")}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() => block(row.ID)}\n                                                size={\"small\"}\n                                            >\n                                                <Block />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip\n                                            title={tDashboard(\"node.delete\")}\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect,useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\nexport default function UserForm(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"user\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState(\n        props.user\n            ? props.user\n            : {\n                  ID: 0,\n                  Email: \"\",\n                  Nick: \"\",\n                  Password: \"\", // 为空时只读\n                  Status: \"0\", // 转换类型\n                  GroupID: \"2\", // 转换类型\n                  TwoFactor: \"\",\n              }\n    );\n    const [groups, setGroups] = useState([]);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = (name) => (event) => {\n        setUser({\n            ...user,\n            [name]: event.target.value,\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const userCopy = { ...user };\n\n        // 整型转换\n        [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\n            userCopy[v] = parseInt(userCopy[v]);\n        });\n\n        setLoading(true);\n        API.post(\"/admin/user\", {\n            user: userCopy,\n            password: userCopy.Password,\n        })\n            .then(() => {\n                history.push(\"/admin/user\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    props.user ? t(\"saved\") : t(\"added\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const groupSelections = useMemo(\n        () =>\n            groups.map((v) => {\n                if (v.ID === 3) {\n                    return null;\n                }\n                return (\n                    <MenuItem key={v.ID} value={v.ID.toString()}>\n                        {v.Name}\n                    </MenuItem>\n                );\n            }),\n        [groups]\n    );\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {user.ID === 0 && t(\"new\")}\n                        {user.ID !== 0 && t(\"editUser\", { nick: user.Nick })}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"email\")}\n                                </InputLabel>\n                                <Input\n                                    value={user.Email}\n                                    type={\"email\"}\n                                    onChange={handleChange(\"Email\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"nick\")}\n                                </InputLabel>\n                                <Input\n                                    value={user.Nick}\n                                    onChange={handleChange(\"Nick\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"password\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={user.Password}\n                                    onChange={handleChange(\"Password\")}\n                                    required={user.ID === 0}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {user.ID !== 0 && t(\"passwordDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"group\")}\n                                </InputLabel>\n                                <Select\n                                    value={user.GroupID}\n                                    onChange={handleChange(\"GroupID\")}\n                                    required\n                                >\n                                    {groupSelections}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"groupDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"status\")}\n                                </InputLabel>\n                                <Select\n                                    value={user.Status}\n                                    onChange={handleChange(\"Status\")}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>\n                                        {t(\"active\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"1\"}>\n                                        {t(\"notActivated\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"2\"}>\n                                        {t(\"banned\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"3\"}>\n                                        {t(\"bannedBySys\")}\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"2FASecret\")}\n                                </InputLabel>\n                                <Input\n                                    value={user.TwoFactor}\n                                    onChange={handleChange(\"TwoFactor\")}\n                                />\n                            </FormControl>\n                            <FormHelperText id=\"component-helper-text\">\n                                {t(\"2FASecretDes\")}\n                            </FormHelperText>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {tDashboard(\"settings.save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport UserForm from \"./UserForm\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\n\nexport default function EditUserPreload() {\n    const [user, setUser] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setUser({});\n        API.get(\"/admin/user/\" + id)\n            .then((response) => {\n                // 整型转换\n                [\"Status\", \"GroupID\"].forEach((v) => {\n                    response.data[v] = response.data[v].toString();\n                });\n                setUser(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{user.ID !== undefined && <UserForm user={user} />}</div>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function FileFilter({ setFilter, setSearch, open, onClose }) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"file\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const { t: tCommon } = useTranslation(\"common\");\n    const [input, setInput] = useState({\n        policy_id: \"all\",\n        user_id: \"\",\n    });\n    const [policies, setPolicies] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                setPolicies(response.data.items);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                name: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {tDashboard(\"user.filterCondition\")}\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        {t(\"storagePolicy\")}\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.policy_id}\n                        onChange={handleChange(\"policy_id\")}\n                    >\n                        <MenuItem value={\"all\"}>\n                            {tDashboard(\"user.all\")}\n                        </MenuItem>\n                        {policies.map((v) => {\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label={t(\"uploaderID\")}\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label={t(\"searchFileName\")}\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    {tCommon(\"cancel\")}\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    {tDashboard(\"user.apply\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete, DeleteForever, FilterList,LinkOff } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport FileFilter from \"../Dialogs/FileFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n}));\n\nexport default function File() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"file\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [files, setFiles] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/file/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setFiles(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n                setUsers(response.data.users);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deleteFile = (id, unlink = false) => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: [id], unlink })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"deleteAsync\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch =\n        (force, unlink = false) =>\n        () => {\n            setLoading(true);\n            API.post(\"/admin/file/delete\", { id: selected, force, unlink })\n                .then(() => {\n                    loadList();\n                    ToggleSnackbar(\"top\", \"right\", t(\"deleteAsync\"), \"success\");\n                })\n                .catch((error) => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                })\n                .then(() => {\n                    setLoading(false);\n                });\n        };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = files.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <FileFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/file/import\")}\n                    variant={\"contained\"}\n                    style={{\n                        alignSelf: \"center\",\n                    }}\n                >\n                    {t(\"import\")}\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title={tDashboard(\"user.filter\")}>\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        {tDashboard(\"policy.refresh\")}\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            {tDashboard(\"user.selectedObjects\", {\n                                num: selected.length,\n                            })}\n                        </Typography>\n                        <Tooltip title={tDashboard(\"policy.delete\")}>\n                            <IconButton\n                                onClick={deleteBatch(false)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title={t(\"forceDelete\")}>\n                            <IconButton\n                                onClick={deleteBatch(true)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <DeleteForever />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title={tDashboard(\"file.unlink\")}>\n                            <IconButton\n                                disabled={loading}\n                                onClick={deleteBatch(true, true)}\n                                size={\"small\"}\n                            >\n                                <LinkOff />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < files.length\n                                        }\n                                        checked={\n                                            files.length > 0 &&\n                                            selected.length === files.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 250 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {t(\"name\")}\n                                        {orderBy[0] === \"name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 70 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {t(\"size\")}\n                                        {orderBy[0] === \"size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    {t(\"uploader\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    {t(\"createdAt\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    {tDashboard(\"policy.actions\")}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {files.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/api/v3/admin/file/preview/\" +\n                                                row.ID\n                                            }\n                                        >\n                                            {row.Name}\n                                            {row.UploadSessionID && (\n                                                <Chip\n                                                    className={\n                                                        classes.disabledBadge\n                                                    }\n                                                    size=\"small\"\n                                                    label={t(\"uploading\")}\n                                                />\n                                            )}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Size)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : t(\"unknownUploader\")}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip\n                                            title={tDashboard(\"policy.delete\")}\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deleteFile(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip\n                                            title={tDashboard(\"file.unlink\")}\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deleteFile(row.ID, true)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <LinkOff />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function ShareFilter({ setFilter, setSearch, open, onClose }) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"share\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const { t: tCommon } = useTranslation(\"common\");\n    const [input, setInput] = useState({\n        is_dir: \"all\",\n        user_id: \"\",\n    });\n    const [keywords, setKeywords] = useState(\"\");\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                source_name: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {tDashboard(\"user.filterCondition\")}\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        {t(\"srcType\")}\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.is_dir}\n                        onChange={handleChange(\"is_dir\")}\n                    >\n                        <MenuItem value={\"all\"}>\n                            {tDashboard(\"user.all\")}\n                        </MenuItem>\n                        <MenuItem value={\"1\"}>{t(\"folder\")}</MenuItem>\n                        <MenuItem value={\"0\"}>{t(\"file\")}</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label={tDashboard(\"file.uploaderID\")}\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label={tDashboard(\"file.searchFileName\")}\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    {tCommon(\"cancel\")}\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    {tCommon(\"ok\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Share() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"share\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [shares, setShares] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [ids, setIds] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const loadList = () => {\n        API.post(\"/admin/share/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setIds(response.data.ids);\n                setShares(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"deleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"deleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = shares.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Tooltip title={tDashboard(\"user.filter\")}>\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        {tDashboard(\"policy.refresh\")}\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            {tDashboard(\"user.selectedObjects\", {\n                                num: selected.length,\n                            })}\n                        </Typography>\n                        <Tooltip title={tDashboard(\"node.delete\")}>\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < shares.length\n                                        }\n                                        checked={\n                                            shares.length > 0 &&\n                                            selected.length === shares.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 200 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"source_name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"source_name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {t(\"objectName\")}\n                                        {orderBy[0] === \"source_name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    {tDashboard(\"policy.type\")}\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"views\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"views\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {t(\"views\")}\n                                        {orderBy[0] === \"views\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"downloads\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"downloads\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {t(\"downloads\")}\n                                        {orderBy[0] === \"downloads\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    {t(\"autoExpire\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    {t(\"owner\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    {t(\"createdAt\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    {tDashboard(\"policy.actions\")}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {shares.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/s/\" +\n                                                ids[row.ID] +\n                                                (row.Password === \"\"\n                                                    ? \"\"\n                                                    : \"?password=\" +\n                                                      row.Password)\n                                            }\n                                        >\n                                            {row.SourceName}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Password === \"\"\n                                            ? t(\"public\")\n                                            : t(\"private\")}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Views}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Downloads}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.RemainDownloads > -1 &&\n                                            t(\"afterNDownloads\", {\n                                                num: row.RemainDownloads,\n                                            })}\n                                        {row.RemainDownloads === -1 &&\n                                            t(\"none\")}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : tDashboard(\n                                                      \"file.unknownUploader\"\n                                                  )}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(row.CreatedAt)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip\n                                            title={tDashboard(\"node.delete\")}\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Link,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function Aria2Helper(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"task\" });\n    const { t: tCommon } = useTranslation(\"common\");\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {t(\"howToConfigAria2\")}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {t(\"aria2Des\")}\n                    <ul>\n                        <li>\n                            <Trans\n                                ns={\"dashboard\"}\n                                i18nKey={\"task.masterAria2Des\"}\n                                components={[\n                                    <Link\n                                        component={RouterLink}\n                                        to={\"/admin/node/edit/1\"}\n                                        key={0}\n                                    />,\n                                ]}\n                            />\n                        </li>\n                        <li>\n                            <Trans\n                                ns={\"dashboard\"}\n                                i18nKey={\"task.slaveAria2Des\"}\n                                components={[\n                                    <Link\n                                        component={RouterLink}\n                                        to={\"/admin/node/add\"}\n                                        key={0}\n                                    />,\n                                ]}\n                            />\n                        </li>\n                    </ul>\n                    <Trans\n                        ns={\"dashboard\"}\n                        i18nKey={\"task.editGroupDes\"}\n                        components={[\n                            <Link\n                                component={RouterLink}\n                                to={\"/admin/group\"}\n                                key={0}\n                            />,\n                        ]}\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                    {tCommon(\"close\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport Aria2Helper from \"./Aria2Helper\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Download() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"task\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [downloads, setDownloads] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [helperOpen, setHelperOpen] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/download/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setDownloads(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = downloads.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <Aria2Helper\n                open={helperOpen}\n                onClose={() => setHelperOpen(false)}\n            />\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => loadList()}\n                    variant={\"outlined\"}\n                >\n                    {tDashboard(\"policy.refresh\")}\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => setHelperOpen(true)}\n                    >\n                        <HelpIcon /> {\"  \"}\n                        {t(\"howToConfigAria2\")}\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            {tDashboard(\"user.selectedObjects\", {\n                                num: selected.length,\n                            })}\n                        </Typography>\n                        <Tooltip title={tDashboard(\"policy.delete\")}>\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < downloads.length\n                                        }\n                                        checked={\n                                            downloads.length > 0 &&\n                                            selected.length === downloads.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    {t(\"srcURL\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    {tDashboard(\"user.status\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    {t(\"node\")}\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 150 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"total_size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"total_size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        {tDashboard(\"file.size\")}\n                                        {orderBy[0] === \"total_size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    {t(\"createdBy\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    {tDashboard(\"file.createdAt\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    {tDashboard(\"policy.actions\")}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {downloads.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Source}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && t(\"ready\")}\n                                        {row.Status === 1 && t(\"downloading\")}\n                                        {row.Status === 2 && t(\"paused\")}\n                                        {row.Status === 3 && t(\"error\")}\n                                        {row.Status === 4 && t(\"finished\")}\n                                        {row.Status === 5 && t(\"canceled\")}\n                                        {row.Status === 6 && t(\"unknown\")}\n                                        {row.Status === 7 && t(\"seeding\")}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.NodeID <= 1 && (\n                                            <Link\n                                                component={RouterLink}\n                                                to={\"/admin/node/edit/1\"}\n                                            >\n                                                {tDashboard(\"node.master\")}\n                                            </Link>\n                                        )}\n                                        {row.NodeID > 1 && (\n                                            <Link\n                                                component={RouterLink}\n                                                to={\n                                                    \"/admin/node/edit/\" +\n                                                    row.NodeID\n                                                }\n                                            >\n                                                {tDashboard(\"node.slave\")}#\n                                                {row.NodeID}\n                                            </Link>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.TotalSize)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : tDashboard(\n                                                      \"file.unknownUploader\"\n                                                  )}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(row.CreatedAt)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip\n                                            title={tDashboard(\"policy.delete\")}\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../../config\";\nimport API from \"../../../middleware/Api\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Task() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"task\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const [tasks, setTasks] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/task/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setTasks(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = tasks.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return res.msg;\n        } catch (e) {\n            return t(\"unknown\");\n        }\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        {tDashboard(\"policy.refresh\")}\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            {tDashboard(\"user.selectedObjects\", {\n                                num: selected.length,\n                            })}\n                        </Typography>\n                        <Tooltip title={tDashboard(\"policy.delete\")}>\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < tasks.length\n                                        }\n                                        checked={\n                                            tasks.length > 0 &&\n                                            selected.length === tasks.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    {tDashboard(\"policy.type\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    {tDashboard(\"user.status\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    {t(\"lastProgress\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    {t(\"errorMsg\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    {t(\"createdBy\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    {tDashboard(\"file.createdAt\")}\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    {tDashboard(\"policy.actions\")}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {getTaskType(row.Type)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskStatus(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskProgress(\n                                            row.Type,\n                                            row.Progress\n                                        )}\n                                    </TableCell>\n                                    <TableCell className={classes.noWrap}>\n                                        {getError(row.Error)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : t(\"unknown\")}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(row.CreatedAt)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip\n                                            title={tDashboard(\"policy.delete\")}\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { Dialog } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fade from \"@material-ui/core/Fade\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport PathSelector from \"../../FileManager/PathSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    userSelect: {\n        width: 400,\n        borderRadius: 0,\n    },\n}));\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value]);\n\n    return debouncedValue;\n}\n\nexport default function Import() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"file\" });\n    const { t: tCommon } = useTranslation(\"common\");\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        policy: 1,\n        userInput: \"\",\n        src: \"\",\n        dst: \"\",\n        recursive: true,\n    });\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [policies, setPolicies] = useState({});\n    const [users, setUsers] = useState([]);\n    const [user, setUser] = useState(null);\n    const [selectRemote, setSelectRemote] = useState(false);\n    const [selectLocal, setSelectLocal] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.checked,\n        });\n    };\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (user === null) {\n            ToggleSnackbar(\"top\", \"right\", t(\"selectTargetUser\"), \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.post(\"/admin/task/import\", {\n            uid: user.ID,\n            policy_id: parseInt(options.policy),\n            src: options.src,\n            dst: options.dst,\n            recursive: options.recursive,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/admin/file\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"importTaskCreated\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\n\n    useEffect(() => {\n        if (debouncedSearchTerm !== \"\") {\n            API.post(\"/admin/user/list\", {\n                page: 1,\n                page_size: 10000,\n                order_by: \"id asc\",\n                searches: {\n                    nick: debouncedSearchTerm,\n                    email: debouncedSearchTerm,\n                },\n            })\n                .then((response) => {\n                    setUsers(response.data.items);\n                })\n                .catch((error) => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                });\n        }\n    }, [debouncedSearchTerm]);\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                response.data.items.forEach((v) => {\n                    res[v.ID] = v;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const selectUser = (u) => {\n        setOptions({\n            ...options,\n            userInput: \"\",\n        });\n        setUser(u);\n    };\n\n    const setMoveTarget = (setter) => (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setter(path === \"//\" ? \"/\" : path);\n    };\n\n    const openPathSelector = (isSrcSelect) => {\n        if (isSrcSelect) {\n            if (\n                !policies[options.policy] ||\n                policies[options.policy].Type === \"local\" ||\n                policies[options.policy].Type === \"remote\"\n            ) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"manuallyPathOnly\"),\n                    \"warning\"\n                );\n                return;\n            }\n            setSelectRemote(true);\n        } else {\n            if (user === null) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"selectTargetUser\"),\n                    \"warning\"\n                );\n                return;\n            }\n            setSelectLocal(true);\n        }\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={selectRemote}\n                onClose={() => setSelectRemote(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"selectFolder\")}\n                </DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\"/admin/file/folders/policy/\" + options.policy}\n                    selected={[]}\n                    onSelect={setMoveTarget((p) =>\n                        setOptions({\n                            ...options,\n                            src: p,\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectRemote(false)}\n                        color=\"primary\"\n                    >\n                        {tCommon(\"ok\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={selectLocal}\n                onClose={() => setSelectLocal(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"selectFolder\")}\n                </DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\n                        \"/admin/file/folders/user/\" +\n                        (user === null ? 0 : user.ID)\n                    }\n                    selected={[]}\n                    onSelect={setMoveTarget((p) =>\n                        setOptions({\n                            ...options,\n                            dst: p,\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectLocal(false)}\n                        color=\"primary\"\n                    >\n                        {tCommon(\"ok\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"importExternalFolder\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                {t(\"importExternalFolderDes\")}\n                            </Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"storagePolicy\")}\n                                </InputLabel>\n                                <Select\n                                    labelId=\"demo-mutiple-chip-label\"\n                                    id=\"demo-mutiple-chip\"\n                                    value={options.policy}\n                                    onChange={handleChange(\"policy\")}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                >\n                                    {Object.keys(policies).map((pid) => (\n                                        <MenuItem key={pid} value={pid}>\n                                            {policies[pid].Name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"storagePolicyDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"targetUser\")}\n                                </InputLabel>\n                                <Input\n                                    value={options.userInput}\n                                    onChange={(e) => {\n                                        handleChange(\"userInput\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    startAdornment={\n                                        user !== null && (\n                                            <InputAdornment position=\"start\">\n                                                <Chip\n                                                    size=\"small\"\n                                                    onDelete={() => {\n                                                        setUser(null);\n                                                    }}\n                                                    label={user.Nick}\n                                                />\n                                            </InputAdornment>\n                                        )\n                                    }\n                                    disabled={user !== null}\n                                />\n                                <Popper\n                                    open={\n                                        options.userInput !== \"\" &&\n                                        users.length > 0\n                                    }\n                                    anchorEl={anchorEl}\n                                    placement={\"bottom\"}\n                                    transition\n                                >\n                                    {({ TransitionProps }) => (\n                                        <Fade\n                                            {...TransitionProps}\n                                            timeout={350}\n                                        >\n                                            <Paper\n                                                className={classes.userSelect}\n                                            >\n                                                {users.map((u) => (\n                                                    <MenuItem\n                                                        key={u.Email}\n                                                        onClick={() =>\n                                                            selectUser(u)\n                                                        }\n                                                    >\n                                                        {u.Nick}{\" \"}\n                                                        {\"<\" + u.Email + \">\"}\n                                                    </MenuItem>\n                                                ))}\n                                            </Paper>\n                                        </Fade>\n                                    )}\n                                </Popper>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"targetUserDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"srcFolderPath\")}\n                                </InputLabel>\n\n                                <Input\n                                    value={options.src}\n                                    onChange={(e) => {\n                                        handleChange(\"src\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(true)\n                                            }\n                                        >\n                                            {t(\"select\")}\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"selectSrcDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"dstFolderPath\")}\n                                </InputLabel>\n\n                                <Input\n                                    value={options.dst}\n                                    onChange={(e) => {\n                                        handleChange(\"dst\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(false)\n                                            }\n                                        >\n                                            {t(\"select\")}\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"dstFolderPathDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.recursive}\n                                            onChange={handleCheckChange(\n                                                \"recursive\"\n                                            )}\n                                        />\n                                    }\n                                    label={t(\"recursivelyImport\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"recursivelyImportDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"createImportTask\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport Link from \"@material-ui/core/Link\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Captcha() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        captcha_type: \"normal\",\n        captcha_height: \"1\",\n        captcha_width: \"1\",\n        captcha_mode: \"3\",\n        captcha_CaptchaLen: \"6\",\n        captcha_ComplexOfNoiseText: \"0\",\n        captcha_ComplexOfNoiseDot: \"0\",\n        captcha_IsShowHollowLine: \"0\",\n        captcha_IsShowNoiseDot: \"0\",\n        captcha_IsShowNoiseText: \"0\",\n        captcha_IsShowSlimeLine: \"0\",\n        captcha_IsShowSineLine: \"0\",\n        captcha_ReCaptchaKey: \"\",\n        captcha_ReCaptchaSecret: \"\",\n        captcha_TCaptcha_CaptchaAppId: \"\",\n        captcha_TCaptcha_AppSecretKey: \"\",\n        captcha_TCaptcha_SecretId: \"\",\n        captcha_TCaptcha_SecretKey: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t(\"captcha\")}\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"captchaType\")}\n                                </InputLabel>\n                                <Select\n                                    value={options.captcha_type}\n                                    onChange={handleChange(\"captcha_type\")}\n                                    required\n                                >\n                                    <MenuItem value={\"normal\"}>\n                                        {t(\"plainCaptcha\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"recaptcha\"}>\n                                        {t(\"reCaptchaV2\")}\n                                    </MenuItem>\n                                    <MenuItem value={\"tcaptcha\"}>\n                                        {t(\"tencentCloudCaptcha\")}\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"captchaProvider\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                {options.captcha_type === \"normal\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {t(\"plainCaptchaTitle\")}\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"captchaWidth\")}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_width}\n                                        onChange={handleChange(\"captcha_width\")}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"captchaHeight\")}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_height}\n                                        onChange={handleChange(\n                                            \"captcha_height\"\n                                        )}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"captchaLength\")}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_CaptchaLen}\n                                        onChange={handleChange(\n                                            \"captcha_CaptchaLen\"\n                                        )}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {t(\"captchaMode\")}\n                                    </InputLabel>\n                                    <Select\n                                        value={options.captcha_mode}\n                                        onChange={handleChange(\"captcha_mode\")}\n                                        required\n                                    >\n                                        <MenuItem value={\"0\"}>\n                                            {t(\"captchaModeNumber\")}\n                                        </MenuItem>\n                                        <MenuItem value={\"1\"}>\n                                            {t(\"captchaModeLetter\")}\n                                        </MenuItem>\n                                        <MenuItem value={\"2\"}>\n                                            {t(\"captchaModeMath\")}\n                                        </MenuItem>\n                                        <MenuItem value={\"3\"}>\n                                            {t(\"captchaModeNumberLetter\")}\n                                        </MenuItem>\n                                    </Select>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {t(\"captchaElement\")}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                            {[\n                                {\n                                    name: \"complexOfNoiseText\",\n                                    field: \"captcha_ComplexOfNoiseText\",\n                                },\n                                {\n                                    name: \"complexOfNoiseDot\",\n                                    field: \"captcha_ComplexOfNoiseDot\",\n                                },\n                                {\n                                    name: \"showHollowLine\",\n                                    field: \"captcha_IsShowHollowLine\",\n                                },\n                                {\n                                    name: \"showNoiseDot\",\n                                    field: \"captcha_IsShowNoiseDot\",\n                                },\n                                {\n                                    name: \"showNoiseText\",\n                                    field: \"captcha_IsShowNoiseText\",\n                                },\n                                {\n                                    name: \"showSlimeLine\",\n                                    field: \"captcha_IsShowSlimeLine\",\n                                },\n                                {\n                                    name: \"showSineLine\",\n                                    field: \"captcha_IsShowSineLine\",\n                                },\n                            ].map((input) => (\n                                <div key={input.name} className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                    checked={\n                                                        options[input.field] ===\n                                                        \"1\"\n                                                    }\n                                                    onChange={handleCheckChange(\n                                                        input.field\n                                                    )}\n                                                />\n                                            }\n                                            label={t(input.name)}\n                                        />\n                                    </FormControl>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                )}\n\n                {options.captcha_type === \"recaptcha\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {t(\"reCaptchaV2\")}\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"siteKey\")}\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.captcha_ReCaptchaKey}\n                                            onChange={handleChange(\n                                                \"captcha_ReCaptchaKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Trans\n                                                ns={\"dashboard\"}\n                                                i18nKey={\"settings.siteKeyDes\"}\n                                                components={[\n                                                    <Link\n                                                        key={0}\n                                                        href={\n                                                            \"https://www.google.com/recaptcha/admin/create\"\n                                                        }\n                                                        target={\"_blank\"}\n                                                    />,\n                                                ]}\n                                            />\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"siteSecret\")}\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_ReCaptchaSecret\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_ReCaptchaSecret\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Trans\n                                                ns={\"dashboard\"}\n                                                i18nKey={\n                                                    \"settings.siteSecretDes\"\n                                                }\n                                                components={[\n                                                    <Link\n                                                        key={0}\n                                                        href={\n                                                            \"https://www.google.com/recaptcha/admin/create\"\n                                                        }\n                                                        target={\"_blank\"}\n                                                    />,\n                                                ]}\n                                            />\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {options.captcha_type === \"tcaptcha\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {t(\"tencentCloudCaptcha\")}\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"secretID\")}\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_SecretId\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_SecretId\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Trans\n                                                ns={\"dashboard\"}\n                                                i18nKey={\n                                                    \"settings.siteSecretDes\"\n                                                }\n                                                components={[\n                                                    <Link\n                                                        key={0}\n                                                        href={\n                                                            \"https://console.cloud.tencent.com/capi\"\n                                                        }\n                                                        target={\"_blank\"}\n                                                    />,\n                                                ]}\n                                            />\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"secretKey\")}\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_SecretKey\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_SecretKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Trans\n                                                ns={\"dashboard\"}\n                                                i18nKey={\n                                                    \"settings.secretKeyDes\"\n                                                }\n                                                components={[\n                                                    <Link\n                                                        key={0}\n                                                        href={\n                                                            \"https://console.cloud.tencent.com/capi\"\n                                                        }\n                                                        target={\"_blank\"}\n                                                    />,\n                                                ]}\n                                            />\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"tCaptchaAppID\")}\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_CaptchaAppId\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_CaptchaAppId\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Trans\n                                                ns={\"dashboard\"}\n                                                i18nKey={\n                                                    \"settings.tCaptchaAppIDDes\"\n                                                }\n                                                components={[\n                                                    <Link\n                                                        key={0}\n                                                        href={\n                                                            \"https://console.cloud.tencent.com/captcha/graphical\"\n                                                        }\n                                                        target={\"_blank\"}\n                                                    />,\n                                                ]}\n                                            />\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            {t(\"tCaptchaSecretKey\")}\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_AppSecretKey\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_AppSecretKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Trans\n                                                ns={\"dashboard\"}\n                                                i18nKey={\n                                                    \"settings.tCaptchaSecretKeyDes\"\n                                                }\n                                                components={[\n                                                    <Link\n                                                        key={0}\n                                                        href={\n                                                            \"https://console.cloud.tencent.com/captcha/graphical\"\n                                                        }\n                                                        target={\"_blank\"}\n                                                    />,\n                                                ]}\n                                            />\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        {t(\"save\")}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useHistory } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n    Cancel,\n    CheckCircle,\n    Delete,\n    Edit,\n    Pause,\n    PlayArrow,\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Chip from \"@material-ui/core/Chip\";\nimport classNames from \"classnames\";\nimport Box from \"@material-ui/core/Box\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n    disabledCell: {\n        color: theme.palette.text.disabled,\n    },\n    verticalAlign: {\n        verticalAlign: \"middle\",\n        display: \"inline-block\",\n    },\n}));\n\nconst columns = [\n    { id: \"#\", minWidth: 50 },\n    { id: \"name\", minWidth: 170 },\n    {\n        id: \"status\",\n        minWidth: 50,\n    },\n    {\n        id: \"features\",\n        minWidth: 170,\n    },\n    {\n        id: \"action\",\n        minWidth: 170,\n    },\n];\n\nconst features = [\n    {\n        field: \"Aria2Enabled\",\n        name: \"remoteDownload\",\n    },\n];\n\nexport default function Node() {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\n    const classes = useStyles();\n    const [nodes, setNodes] = useState([]);\n    const [isActive, setIsActive] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/node/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then((response) => {\n                setNodes(response.data.items);\n                setTotal(response.data.total);\n                setIsActive(response.data.active);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const toggleNode = (id, desired) => {\n        setLoading(true);\n        API.patch(\"/admin/node/enable/\" + id + \"/\" + desired)\n            .then((response) => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    desired === 1 ? t(\"nodeDisabled\") : t(\"nodeEnabled\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteNode = (id) => {\n        setLoading(true);\n        API.delete(\"/admin/node/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", t(\"nodeDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const getStatusBadge = (status) => {\n        if (status === 1) {\n            return (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    label={t(\"disabled\")}\n                />\n            );\n        }\n    };\n\n    const getFeatureBadge = (node) =>\n        features.map((feature) => {\n            if (node[feature.field]) {\n                return (\n                    <Chip\n                        className={classes.disabledBadge}\n                        size=\"small\"\n                        color=\"primary\"\n                        label={t(feature.name)}\n                    />\n                );\n            }\n        });\n\n    const getRealStatusBadge = (status) =>\n        status ? (\n            <Box color=\"success.main\" fontSize=\"small\">\n                <CheckCircle\n                    className={classes.verticalAlign}\n                    fontSize=\"small\"\n                />{\" \"}\n                <span className={classes.verticalAlign}>{t(\"online\")}</span>\n            </Box>\n        ) : (\n            <Box color=\"error.main\" fontSize=\"small\">\n                <Cancel className={classes.verticalAlign} fontSize=\"small\" />{\" \"}\n                <span className={classes.verticalAlign}>{t(\"offline\")}</span>\n            </Box>\n        );\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/node/add\")}\n                    variant={\"contained\"}\n                >\n                    {t(\"addNewNode\")}\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        {t(\"refresh\")}\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{\n                                            minWidth: column.minWidthclassNames,\n                                        }}\n                                    >\n                                        {t(column.id)}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {nodes.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        className={classNames({\n                                            [classes.disabledCell]:\n                                                row.Status === 1,\n                                        })}\n                                    >\n                                        {row.Name}\n                                        {getStatusBadge(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getRealStatusBadge(isActive[row.ID])}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getFeatureBadge(row)}\n                                    </TableCell>\n\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip\n                                            title={\n                                                row.Status === 1\n                                                    ? t(\"enableNode\")\n                                                    : t(\"disableNode\")\n                                            }\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    toggleNode(\n                                                        row.ID,\n                                                        1 - row.Status\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                {row.Status === 1 && (\n                                                    <PlayArrow />\n                                                )}\n                                                {row.Status !== 1 && <Pause />}\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={t(\"edit\")}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/node/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={t(\"delete\")}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deleteNode(row.ID)\n                                                }\n                                                disabled={loading}\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Communication(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = () => {\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: props.node.Server,\n            secret: props.node.SlaveKey,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    tDashboard(\"policy.communicationOK\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                <Trans\n                    ns={\"dashboard\"}\n                    i18nKey={\"node.slaveNodeDes\"}\n                    components={[<Box key={0} fontWeight=\"fontWeightBold\" />]}\n                />\n            </Alert>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {tDashboard(\"policy.remoteCopyBinaryDescription\")}\n                    </Typography>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>2</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {tDashboard(\"policy.remoteSecretDescription\")}\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                {tDashboard(\"policy.remoteSecret\")}\n                            </InputLabel>\n                            <Input\n                                required\n                                inputProps={{\n                                    minlength: 64,\n                                }}\n                                value={props.node.SlaveKey}\n                                onChange={props.handleTextChange(\"SlaveKey\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>3</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {tDashboard(\"policy.modifyRemoteConfig\")}\n                        <br />\n                        <Trans\n                            ns={\"dashboard\"}\n                            i18nKey={\"policy.addRemoteConfigDes\"}\n                            components={[<code key={0} />]}\n                        />\n                    </Typography>\n                    <pre>\n                        [System]\n                        <br />\n                        Mode = slave\n                        <br />\n                        Listen = :5212\n                        <br />\n                        <br />\n                        [Slave]\n                        <br />\n                        Secret = {props.node.SlaveKey}\n                        <br />\n                        <br />\n                        <Trans\n                            ns={\"dashboard\"}\n                            i18nKey={\"node.overwriteDes\"}\n                            components={[<br key={0} />, <br key={1} />]}\n                        />\n                        <br />\n                        [OptionOverwrite]\n                        <br />; {t(\"workerNumDes\")}\n                        <br />\n                        max_worker_num = 50\n                        <br />; {t(\"parallelTransferDes\")}\n                        <br />\n                        max_parallel_transfer = 10\n                        <br />; {t(\"chunkRetriesDes\")}\n                        <br />\n                        chunk_retries = 10\n                    </pre>\n                    <Typography variant={\"body2\"}>\n                        {tDashboard(\"policy.remoteConfigDifference\")}\n                        <ul>\n                            <li>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.remoteConfigDifference1\"}\n                                    components={[\n                                        <code key={0} />,\n                                        <code key={1} />,\n                                        <code key={2} />,\n                                    ]}\n                                />\n                            </li>\n                            <li>\n                                <Trans\n                                    ns={\"dashboard\"}\n                                    i18nKey={\"policy.remoteConfigDifference2\"}\n                                    components={[\n                                        <code key={0} />,\n                                        <code key={1} />,\n                                    ]}\n                                />\n                            </li>\n                        </ul>\n                        {t(\"multipleMasterDes\")}\n                    </Typography>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>4</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {tDashboard(\"policy.inputRemoteAddress\")}\n                        <br />\n                        {tDashboard(\"policy.inputRemoteAddressDes\")}\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                {tDashboard(\"policy.remoteAddress\")}\n                            </InputLabel>\n                            <Input\n                                fullWidth\n                                required\n                                type={\"url\"}\n                                value={props.node.Server}\n                                onChange={props.handleTextChange(\"Server\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>5</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {tDashboard(\"policy.testCommunicationDes\")}\n                    </Typography>\n                    <div className={classes.form}>\n                        <Button\n                            disabled={loading}\n                            variant={\"outlined\"}\n                            onClick={() => testSlave()}\n                            color={\"primary\"}\n                        >\n                            {tDashboard(\"policy.testCommunication\")}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                >\n                    {tDashboard(\"policy.next\")}\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport API from \"../../../../middleware/Api\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Aria2RPC(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testAria2 = () => {\n        setLoading(true);\n        API.post(\"/admin/node/aria2/test\", {\n            type: props.node.Type,\n            server: props.node.Server,\n            secret: props.node.SlaveKey,\n            rpc: props.node.Aria2OptionsSerialized.server,\n            token: props.node.Aria2OptionsSerialized.token,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"ariaSuccess\", { version: response.data }),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const mode = props.node.Type === 0 ? t(\"slave\") : t(\"master\");\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                <Typography variant=\"body2\">\n                    <Trans\n                        ns={\"dashboard\"}\n                        i18nKey={\"node.aria2Des\"}\n                        values={{\n                            mode: mode,\n                        }}\n                        components={[\n                            <Link\n                                href={\"https://aria2.github.io/\"}\n                                target={\"_blank\"}\n                                key={0}\n                            />,\n                            <Box\n                                component=\"span\"\n                                fontWeight=\"fontWeightBold\"\n                                key={1}\n                            />,\n                            <Link\n                                href={t(\"aria2DocURL\")}\n                                target={\"_blank\"}\n                                key={2}\n                            />,\n                        ]}\n                    />\n                </Typography>\n            </Alert>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {props.node.Type === 0\n                            ? t(\"slaveTakeOverRemoteDownload\")\n                            : t(\"masterTakeOverRemoteDownload\")}\n                        <br />\n                        {props.node.Type === 0\n                            ? t(\"routeTaskSlave\")\n                            : t(\"routeTaskMaster\")}\n                    </Typography>\n\n                    <div className={classes.form}>\n                        <FormControl required component=\"fieldset\">\n                            <RadioGroup\n                                required\n                                value={props.node.Aria2Enabled}\n                                onChange={props.handleTextChange(\n                                    \"Aria2Enabled\"\n                                )}\n                                row\n                            >\n                                <FormControlLabel\n                                    value={\"true\"}\n                                    control={<Radio color={\"primary\"} />}\n                                    label={t(\"enable\")}\n                                />\n                                <FormControlLabel\n                                    value={\"false\"}\n                                    control={<Radio color={\"primary\"} />}\n                                    label={t(\"disable\")}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <Collapse in={props.node.Aria2Enabled === \"true\"}>\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>2</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            {t(\"aria2ConfigDes\", {\n                                target:\n                                    props.node.Type === 0\n                                        ? t(\"slaveNodeTarget\")\n                                        : t(\"masterNodeTarget\"),\n                            })}\n                        </Typography>\n                        <pre>\n                            # {t(\"enableRPCComment\")}\n                            <br />\n                            enable-rpc=true\n                            <br /># {t(\"rpcPortComment\")}\n                            <br />\n                            rpc-listen-port=6800\n                            <br /># {t(\"rpcSecretComment\")}\n                            <br />\n                            rpc-secret=\n                            {props.node.Aria2OptionsSerialized.token}\n                            <br />\n                        </pre>\n                        <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                            <Typography variant=\"body2\">\n                                {t(\"rpcConfigDes\")}\n                            </Typography>\n                        </Alert>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>3</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            <Trans\n                                ns={\"dashboard\"}\n                                i18nKey={\"node.rpcServerDes\"}\n                                values={{\n                                    mode: mode,\n                                }}\n                                components={[\n                                    <code key={0} />,\n                                    <code key={1} />,\n                                    <code key={2} />,\n                                ]}\n                            />\n                        </Typography>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"rpcServer\")}\n                                </InputLabel>\n                                <Input\n                                    required\n                                    type={\"url\"}\n                                    value={\n                                        props.node.Aria2OptionsSerialized.server\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"server\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"rpcServerHelpDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>4</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            <Trans\n                                ns={\"dashboard\"}\n                                i18nKey={\"node.rpcTokenDes\"}\n                                components={[<code key={0} />]}\n                            />\n                        </Typography>\n                        <div className={classes.form}>\n                            <Input\n                                value={props.node.Aria2OptionsSerialized.token}\n                                onChange={props.handleOptionChange(\"token\")}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>5</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            <Trans\n                                ns={\"dashboard\"}\n                                i18nKey={\"node.aria2PathDes\"}\n                                components={[<strong key={0} />]}\n                            />\n                        </Typography>\n                        <div className={classes.form}>\n                            <Input\n                                value={\n                                    props.node.Aria2OptionsSerialized.temp_path\n                                }\n                                onChange={props.handleOptionChange(\"temp_path\")}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>5</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            {t(\"aria2SettingDes\")}\n                        </Typography>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"refreshInterval\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .interval\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"interval\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"refreshIntervalDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"rpcTimeout\")}\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .timeout\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"timeout\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"rpcTimeoutDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    {t(\"globalOptions\")}\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .options\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"options\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {t(\"globalOptionsDes\")}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>6</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            {t(\"testAria2Des\", { mode })}\n                            {props.node.Type === 0 &&\n                                t(\"testAria2DesSlaveAddition\")}\n                        </Typography>\n                        <div className={classes.form}>\n                            <Button\n                                disabled={loading}\n                                variant={\"outlined\"}\n                                onClick={() => testAria2()}\n                                color={\"primary\"}\n                            >\n                                {t(\"testAria2\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Collapse>\n\n            <div className={classes.stepFooter}>\n                {props.activeStep !== 0 && (\n                    <Button\n                        color={\"default\"}\n                        className={classes.button}\n                        onClick={props.onBack}\n                    >\n                        {tDashboard(\"policy.back\")}\n                    </Button>\n                )}\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                    onClick={props.onSubmit}\n                >\n                    {tDashboard(\"policy.next\")}\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Metainfo(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>{t(\"nameNode\")}</Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <Input\n                                required\n                                value={props.node.Name}\n                                onChange={props.handleTextChange(\"Name\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>2</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {t(\"loadBalancerRankDes\")}\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                {t(\"loadBalancerRank\")}\n                            </InputLabel>\n                            <Input\n                                type={\"number\"}\n                                required\n                                inputProps={{\n                                    step: 1,\n                                    min: 0,\n                                }}\n                                value={props.node.Rank}\n                                onChange={props.handleTextChange(\"Rank\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                >\n                    {tDashboard(\"policy.next\")}\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Completed(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <form className={classes.stepContent}>\n            <Typography>{t(\"nodeSaved\")}</Typography>\n            <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                {t(\"nodeSavedFutureAction\")}\n            </Typography>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    color={\"primary\"}\n                    className={classes.button}\n                    onClick={() => history.push(\"/admin/node\")}\n                >\n                    {t(\"backToNodeList\")}\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { randomStr } from \"../../../../utils\";\nimport Communication from \"./Communication\";\nimport Aria2RPC from \"./Aria2RPC\";\nimport API from \"../../../../middleware/Api\";\nimport Metainfo from \"./Metainfo\";\nimport Completed from \"./Completed\";\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst steps = [\n    {\n        slaveOnly: true,\n        title: \"communication\",\n        optional: false,\n        component: function show(p) {\n            return <Communication {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"remoteDownload\",\n        optional: false,\n        component: function show(p) {\n            return <Aria2RPC {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"otherSettings\",\n        optional: false,\n        component: function show(p) {\n            return <Metainfo {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"finish\",\n        optional: false,\n        component: function show(p) {\n            return <Completed {...p} />;\n        },\n    },\n];\n\nexport default function NodeGuide(props) {\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\n    const { t: tDashboard } = useTranslation(\"dashboard\");\n    const [activeStep, setActiveStep] = useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [loading, setLoading] = useState(false);\n    const [node, setNode] = useState(\n        props.node\n            ? props.node\n            : {\n                  Status: 1,\n                  Type: 0,\n                  Aria2Enabled: \"false\",\n                  Server: \"https://example.com:5212\",\n                  SlaveKey: randomStr(64),\n                  MasterKey: randomStr(64),\n                  Rank: \"0\",\n                  Aria2OptionsSerialized: {\n                      token: randomStr(32),\n                      options: \"{}\",\n                      interval: \"10\",\n                      timeout: \"10\",\n                  },\n              }\n    );\n\n    const usedSteps = useMemo(() => {\n        return steps.filter((step) => !(step.slaveOnly && node.Type === 1));\n    }, [node.Type]);\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleTextChange = (name) => (event) => {\n        setNode({\n            ...node,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setNode({\n            ...node,\n            Aria2OptionsSerialized: {\n                ...node.Aria2OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const nextStep = () => {\n        if (props.node || activeStep + 1 === steps.length - 1) {\n            setLoading(true);\n\n            const nodeCopy = { ...node };\n            nodeCopy.Aria2OptionsSerialized = {\n                ...node.Aria2OptionsSerialized,\n            };\n            nodeCopy.Rank = parseInt(nodeCopy.Rank);\n            nodeCopy.Aria2OptionsSerialized.interval = parseInt(\n                nodeCopy.Aria2OptionsSerialized.interval\n            );\n            nodeCopy.Aria2OptionsSerialized.timeout = parseInt(\n                nodeCopy.Aria2OptionsSerialized.timeout\n            );\n            nodeCopy.Aria2Enabled = nodeCopy.Aria2Enabled === \"true\";\n            API.post(\"/admin/node\", {\n                node: nodeCopy,\n            })\n                .then(() => {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        props.node ? t(\"nodeSavedNow\") : t(\"nodeAdded\"),\n                        \"success\"\n                    );\n                    setActiveStep(activeStep + 1);\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                })\n                .then(() => {\n                    setLoading(false);\n                });\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.node ? t(\"editNode\") : t(\"addNode\")}\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {usedSteps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">\n                                {tDashboard(\"policy.optional\")}\n                            </Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    if (!(label.slaveOnly && node.Type === 1)) {\n                        return (\n                            <Step key={label.title} {...stepProps}>\n                                <StepLabel {...labelProps}>\n                                    {t(label.title)}\n                                </StepLabel>\n                            </Step>\n                        );\n                    }\n                })}\n            </Stepper>\n\n            {usedSteps[activeStep].component({\n                onSubmit: (e) => nextStep(),\n                node: node,\n                loading: loading,\n                onBack: (e) => setActiveStep(activeStep - 1),\n                handleTextChange: handleTextChange,\n                activeStep: activeStep,\n                handleOptionChange: handleOptionChange,\n            })}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NodeGuide from \"./Guide/NodeGuide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function AddNode() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                <NodeGuide />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NodeGuide from \"./Guide/NodeGuide\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../../middleware/Api\";\nimport { toggleSnackbar } from \"../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function EditNode() {\n    const classes = useStyles();\n    const { id } = useParams();\n    const [node, setNode] = useState(null);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/node/\" + id)\n            .then((response) => {\n                response.data.Rank = response.data.Rank.toString();\n                response.data.Aria2OptionsSerialized.interval = response.data.Aria2OptionsSerialized.interval.toString();\n                response.data.Aria2OptionsSerialized.timeout = response.data.Aria2OptionsSerialized.timeout.toString();\n                response.data.Aria2Enabled = response.data.Aria2Enabled\n                    ? \"true\"\n                    : \"false\";\n                setNode(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {node && <NodeGuide node={node} />}\n            </Paper>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport Dashboard from \"./component/Admin/Dashboard\";\nimport { useHistory } from \"react-router\";\nimport Auth from \"./middleware/Auth\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport createTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { zhCN } from \"@material-ui/core/locale\";\n\nimport Index from \"./component/Admin/Index\";\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\nimport Access from \"./component/Admin/Setting/Access\";\nimport Mail from \"./component/Admin/Setting/Mail\";\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\nimport Theme from \"./component/Admin/Setting/Theme\";\nimport ImageSetting from \"./component/Admin/Setting/Image\";\nimport Policy from \"./component/Admin/Policy/Policy\";\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\nimport Group from \"./component/Admin/Group/Group\";\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\nimport User from \"./component/Admin/User/User\";\nimport UserForm from \"./component/Admin/User/UserForm\";\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\nimport File from \"./component/Admin/File/File\";\nimport Share from \"./component/Admin/Share/Share\";\nimport Download from \"./component/Admin/Task/Download\";\nimport Task from \"./component/Admin/Task/Task\";\nimport Import from \"./component/Admin/File/Import\";\nimport Captcha from \"./component/Admin/Setting/Captcha\";\nimport Node from \"./component/Admin/Node/Node\";\nimport AddNode from \"./component/Admin/Node/AddNode\";\nimport EditNode from \"./component/Admin/Node/EditNode\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    content: {\n        flexGrow: 1,\n        padding: 0,\n        minWidth: 0,\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst theme = createTheme(\n    {\n        palette: {\n            background: {},\n        },\n        shape:{\n            borderRadius:12,\n        },\n        overrides: {\n            MuiButton: {\n                root: {\n                    textTransform: \"none\",\n                },\n            },\n            MuiTab: {\n                root: {\n                    textTransform: \"none\",\n                },\n            },\n        },\n    },\n    zhCN\n);\n\nexport default function Admin() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        const user = Auth.GetUser();\n        if (user && user.group) {\n            if (user.group.id !== 1) {\n                history.push(\"/home\");\n                return;\n            }\n            setShow(true);\n            return;\n        }\n        history.push(\"/login\");\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AlertBar />\n                    {show && (\n                        <Dashboard\n                            content={(path) => (\n                                <Switch>\n                                    <Route path={`${path}/home`} exact>\n                                        <Index />\n                                    </Route>\n\n                                    <Route path={`${path}/basic`}>\n                                        <SiteInformation />\n                                    </Route>\n\n                                    <Route path={`${path}/access`}>\n                                        <Access />\n                                    </Route>\n\n                                    <Route path={`${path}/mail`}>\n                                        <Mail />\n                                    </Route>\n\n                                    <Route path={`${path}/upload`}>\n                                        <UploadDownload />\n                                    </Route>\n\n                                    <Route path={`${path}/theme`}>\n                                        <Theme />\n                                    </Route>\n\n                                    <Route path={`${path}/image`}>\n                                        <ImageSetting />\n                                    </Route>\n\n                                    <Route path={`${path}/captcha`}>\n                                        <Captcha />\n                                    </Route>\n\n                                    <Route path={`${path}/policy`} exact>\n                                        <Policy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/add/:type`}\n                                        exact\n                                    >\n                                        <AddPolicy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/edit/:mode/:id`}\n                                        exact\n                                    >\n                                        <EditPolicyPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/group`} exact>\n                                        <Group />\n                                    </Route>\n\n                                    <Route path={`${path}/group/add`} exact>\n                                        <GroupForm />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/group/edit/:id`}\n                                        exact\n                                    >\n                                        <EditGroupPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/user`} exact>\n                                        <User />\n                                    </Route>\n\n                                    <Route path={`${path}/user/add`} exact>\n                                        <UserForm />\n                                    </Route>\n\n                                    <Route path={`${path}/user/edit/:id`} exact>\n                                        <EditUserPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/file`} exact>\n                                        <File />\n                                    </Route>\n\n                                    <Route path={`${path}/file/import`} exact>\n                                        <Import />\n                                    </Route>\n\n                                    <Route path={`${path}/share`} exact>\n                                        <Share />\n                                    </Route>\n\n                                    <Route path={`${path}/download`} exact>\n                                        <Download />\n                                    </Route>\n\n                                    <Route path={`${path}/task`} exact>\n                                        <Task />\n                                    </Route>\n\n                                    <Route path={`${path}/node`} exact>\n                                        <Node />\n                                    </Route>\n\n                                    <Route path={`${path}/node/add`} exact>\n                                        <AddNode />\n                                    </Route>\n\n                                    <Route path={`${path}/node/edit/:id`} exact>\n                                        <EditNode />\n                                    </Route>\n                                </Switch>\n                            )}\n                        />\n                    )}\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n"],"sourceRoot":""}